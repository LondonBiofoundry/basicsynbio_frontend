[{"/Users/benedictcarling/basicsynbio_frontend/src/index.tsx":"1","/Users/benedictcarling/basicsynbio_frontend/src/reportWebVitals.ts":"2","/Users/benedictcarling/basicsynbio_frontend/src/app/store.ts":"3","/Users/benedictcarling/basicsynbio_frontend/src/App.tsx":"4","/Users/benedictcarling/basicsynbio_frontend/src/pages/BasicBuild.jsx":"5","/Users/benedictcarling/basicsynbio_frontend/src/ContextInitialisation.ts":"6","/Users/benedictcarling/basicsynbio_frontend/src/features/collections/collectionSlice.ts":"7","/Users/benedictcarling/basicsynbio_frontend/src/pages/Home.tsx":"8","/Users/benedictcarling/basicsynbio_frontend/src/pages/About.tsx":"9","/Users/benedictcarling/basicsynbio_frontend/src/pages/Designer.tsx":"10","/Users/benedictcarling/basicsynbio_frontend/src/components/navbar/navbar.tsx":"11","/Users/benedictcarling/basicsynbio_frontend/src/features/collections/collectionAPI.ts":"12","/Users/benedictcarling/basicsynbio_frontend/src/pages/AboutImages.tsx":"13","/Users/benedictcarling/basicsynbio_frontend/src/pages/AboutPapers.tsx":"14","/Users/benedictcarling/basicsynbio_frontend/src/components/home/hometext.tsx":"15","/Users/benedictcarling/basicsynbio_frontend/src/components/home/homeimg.tsx":"16","/Users/benedictcarling/basicsynbio_frontend/src/components/designer/export/export.tsx":"17","/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/userinput.tsx":"18","/Users/benedictcarling/basicsynbio_frontend/src/components/home/basicsynbio.tsx":"19","/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/standardinput/standardinput.tsx":"20","/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/userinputUtils/snackbar.tsx":"21","/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/userinputUtils/viewbuild.tsx":"22","/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/userinputUtils/visualiseAssembly.tsx":"23","/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/userinputUtils/validateassembly.tsx":"24","/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/plasmid/plasmid.tsx":"25","/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/custominput/custominput.tsx":"26","/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/userinputUtils/successlottly.tsx":"27","/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/userinputUtils/faillottly.tsx":"28","/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/custominput/custompl.Components/MultipleCheck.tsx":"29","/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/custominput/custompl.Components/addiseq.tsx":"30","/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/custominput/custompl.Components/customShop.tsx":"31","/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/custominput/custompl.Components/genbank.tsx":"32","/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/custominput/custompl.Components/SBOL.tsx":"33","/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/custominput/custompl.Components/uploadIMG.tsx":"34","/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/standardinput/standardpl.Components/standardCopyable.tsx":"35","/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/plasmid/plasmid.Components/shoppingbag.tsx":"36","/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/plasmid/plasmid.Components/successLotty.tsx":"37","/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/plasmid/plasmid.Components/bagitemmodal.tsx":"38","/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/plasmid/plasmid.Components/combinatorialPopup.tsx":"39","/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/standardinput/standardpl.Components/standardShop.tsx":"40","/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/standardinput/standardpl.Components/searchPart.tsx":"41","/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/standardinput/standardpl.Components/seachCollection.tsx":"42","/Users/benedictcarling/basicsynbio_frontend/src/components/designer/export/PDF.Components/pdf.tsx":"43","/Users/benedictcarling/basicsynbio_frontend/src/components/designer/export/ECHO.Components/echo.tsx":"44","/Users/benedictcarling/basicsynbio_frontend/src/components/designer/export/UniqueAssemblies.Components/UniqueAssemblies.tsx":"45","/Users/benedictcarling/basicsynbio_frontend/src/components/designer/export/UniqueParts.Components/UniqueParts.tsx":"46","/Users/benedictcarling/basicsynbio_frontend/src/components/designer/export/JSON.Components/JSONCard.tsx":"47","/Users/benedictcarling/basicsynbio_frontend/src/components/designer/export/CSV.Components/csvcard.tsx":"48","/Users/benedictcarling/basicsynbio_frontend/src/Api.ts":"49","/Users/benedictcarling/basicsynbio_frontend/src/generated-sources/index.ts":"50","/Users/benedictcarling/basicsynbio_frontend/src/generated-sources/configuration.ts":"51","/Users/benedictcarling/basicsynbio_frontend/src/generated-sources/api.ts":"52","/Users/benedictcarling/basicsynbio_frontend/src/generated-sources/base.ts":"53","/Users/benedictcarling/basicsynbio_frontend/src/generated-sources/common.ts":"54"},{"size":579,"mtime":1636912416765,"results":"55","hashOfConfig":"56"},{"size":425,"mtime":1636912416767,"results":"57","hashOfConfig":"56"},{"size":626,"mtime":1636912416761,"results":"58","hashOfConfig":"56"},{"size":1608,"mtime":1636912416750,"results":"59","hashOfConfig":"56"},{"size":16043,"mtime":1636912416766,"results":"60","hashOfConfig":"56"},{"size":1120,"mtime":1638093013452,"results":"61","hashOfConfig":"56"},{"size":1342,"mtime":1636912416762,"results":"62","hashOfConfig":"56"},{"size":847,"mtime":1636912416766,"results":"63","hashOfConfig":"56"},{"size":3438,"mtime":1636912416766,"results":"64","hashOfConfig":"56"},{"size":3416,"mtime":1638105635517,"results":"65","hashOfConfig":"56"},{"size":2274,"mtime":1636912416761,"results":"66","hashOfConfig":"56"},{"size":341,"mtime":1638093013501,"results":"67","hashOfConfig":"56"},{"size":3398,"mtime":1636912416766,"results":"68","hashOfConfig":"56"},{"size":2239,"mtime":1636912416766,"results":"69","hashOfConfig":"56"},{"size":1545,"mtime":1636912416760,"results":"70","hashOfConfig":"56"},{"size":1017,"mtime":1636912416760,"results":"71","hashOfConfig":"56"},{"size":1343,"mtime":1638097059756,"results":"72","hashOfConfig":"56"},{"size":13328,"mtime":1638096965950,"results":"73","hashOfConfig":"56"},{"size":10875,"mtime":1636912416760,"results":"74","hashOfConfig":"56"},{"size":3140,"mtime":1636912416756,"results":"75","hashOfConfig":"56"},{"size":832,"mtime":1636912416758,"results":"76","hashOfConfig":"56"},{"size":6251,"mtime":1638105594733,"results":"77","hashOfConfig":"56"},{"size":9537,"mtime":1638105619814,"results":"78","hashOfConfig":"56"},{"size":8474,"mtime":1638105504888,"results":"79","hashOfConfig":"56"},{"size":3807,"mtime":1638105415878,"results":"80","hashOfConfig":"56"},{"size":4271,"mtime":1638097308978,"results":"81","hashOfConfig":"56"},{"size":861,"mtime":1636912416759,"results":"82","hashOfConfig":"56"},{"size":860,"mtime":1636912416758,"results":"83","hashOfConfig":"56"},{"size":793,"mtime":1636912416753,"results":"84","hashOfConfig":"56"},{"size":683,"mtime":1636912416753,"results":"85","hashOfConfig":"56"},{"size":509,"mtime":1638097252400,"results":"86","hashOfConfig":"56"},{"size":4648,"mtime":1638104950286,"results":"87","hashOfConfig":"56"},{"size":2709,"mtime":1638104994594,"results":"88","hashOfConfig":"56"},{"size":595,"mtime":1636912416754,"results":"89","hashOfConfig":"56"},{"size":3289,"mtime":1638105424495,"results":"90","hashOfConfig":"56"},{"size":7541,"mtime":1638105383834,"results":"91","hashOfConfig":"56"},{"size":592,"mtime":1636912416755,"results":"92","hashOfConfig":"56"},{"size":9460,"mtime":1638105046678,"results":"93","hashOfConfig":"56"},{"size":5541,"mtime":1638105254542,"results":"94","hashOfConfig":"56"},{"size":520,"mtime":1636912416757,"results":"95","hashOfConfig":"56"},{"size":3477,"mtime":1638093014038,"results":"96","hashOfConfig":"56"},{"size":5318,"mtime":1638093013921,"results":"97","hashOfConfig":"56"},{"size":1942,"mtime":1638097097018,"results":"98","hashOfConfig":"56"},{"size":1977,"mtime":1638097042917,"results":"99","hashOfConfig":"56"},{"size":2037,"mtime":1638097119085,"results":"100","hashOfConfig":"56"},{"size":1994,"mtime":1638097140506,"results":"101","hashOfConfig":"56"},{"size":1921,"mtime":1638097077778,"results":"102","hashOfConfig":"56"},{"size":1918,"mtime":1638097025326,"results":"103","hashOfConfig":"56"},{"size":273,"mtime":1638092698747,"results":"104","hashOfConfig":"56"},{"size":776,"mtime":1638096558700,"results":"105","hashOfConfig":"56"},{"size":3545,"mtime":1638096558731,"results":"106","hashOfConfig":"56"},{"size":80123,"mtime":1638096558729,"results":"107","hashOfConfig":"56"},{"size":1868,"mtime":1638096558703,"results":"108","hashOfConfig":"56"},{"size":4526,"mtime":1638096558707,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"1d5zv59",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"112"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"112"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"112"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/benedictcarling/basicsynbio_frontend/src/index.tsx",[],["224","225"],"/Users/benedictcarling/basicsynbio_frontend/src/reportWebVitals.ts",[],"/Users/benedictcarling/basicsynbio_frontend/src/app/store.ts",[],"/Users/benedictcarling/basicsynbio_frontend/src/App.tsx",[],"/Users/benedictcarling/basicsynbio_frontend/src/pages/BasicBuild.jsx",["226"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { dark } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst space4 = \"\\xa0\\xa0\\xa0\\xa0\";\nconst space8 = \"\\xa0\\xa0\\xa0\\xa0\\xa0\\xa0\\xa0\\xa0\";\nconst space12 = \"\\xa0\\xa0\\xa0\\xa0\\xa0\\xa0\\xa0\\xa0\\xa0\\xa0\\xa0\\xa0\";\nconst space16 =\n  \"\\xa0\\xa0\\xa0\\xa0\\xa0\\xa0\\xa0\\xa0\\xa0\\xa0\\xa0\\xa0\\xa0\\xa0\\xa0\\xa0\";\n\nconst basiclinker = `\"<class 'basicsynbio.main.BasicLinker'>\"`;\nconst utrlinker = `\"<class 'basicsynbio.main.BasicUTRRBSLinker'>\"`;\n\nconst components = {\n  code({ node, inline, className, children, ...props }) {\n    const match = /language-(\\w+)/.exec(className || \"\");\n    return !inline && match ? (\n      <SyntaxHighlighter\n        style={dark}\n        language={match[1]}\n        PreTag=\"div\"\n        children={String(children).replace(/\\n$/, \"\")}\n        {...props}\n      />\n    ) : (\n      <code className={className} {...props} />\n    );\n  },\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    alignItems: \"left\",\n    textAlign: \"left\",\n    alignSelf: \"stretch\",\n    padding: \"50px\",\n  },\n}));\n\nexport default function BasicBuild() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n        spacing={3}\n      >\n        <Grid item xs={12}>\n          <Typography variant=\"h4\">Type Definitions</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography variant=\"body1\">\n            Instruction and ref specification use the following common types.\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography variant=\"h6\">Primitive Types</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Type</TableCell>\n                  <TableCell> Definition </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <TableRow key={\"1\"}>\n                  <TableCell>Float</TableCell>\n                  <TableCell>a floating point numeric value</TableCell>\n                </TableRow>\n\n                <TableRow key={\"2\"}>\n                  <TableCell>Int</TableCell>\n                  <TableCell>an integer numeric value</TableCell>\n                </TableRow>\n                <TableRow key={\"3\"}>\n                  <TableCell>String</TableCell>\n                  <TableCell>\n                    any sequence of utf-encoded characters bounded with \"\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography variant=\"h6\">Defined Types</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Type</TableCell>\n                  <TableCell> Example </TableCell>\n                  <TableCell> Definition </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <TableRow key={\"1\"}>\n                  <TableCell>DNA-String</TableCell>\n                  <TableCell>\n                    \"TACGCATGACTCGTACGTACGATCGATCGATCGATCGTACTGCATC\"\n                  </TableCell>\n                  <TableCell>\n                    any sequence of utf-encoded A,C,T or G characters bounded\n                    with \"\n                  </TableCell>\n                </TableRow>\n                <TableRow key={\"2\"}>\n                  <TableCell>Unique-Part-ID</TableCell>\n                  <TableCell>UP0</TableCell>\n                  <TableCell>UP + A Non-Negative Int (0,1,2...)</TableCell>\n                </TableRow>\n                <TableRow key={\"3\"}>\n                  <TableCell>Unique-Linker-ID</TableCell>\n                  <TableCell>UL0</TableCell>\n                  <TableCell>UL + A Non-Negative Int (0,1,2...)</TableCell>\n                </TableRow>\n                <TableRow key={\"4\"}>\n                  <TableCell>Clip-Reaction-ID</TableCell>\n                  <TableCell>CR0</TableCell>\n                  <TableCell>CR + A Non-Negative Int (0,1,2...)</TableCell>\n                </TableRow>\n                <TableRow key={\"5\"}>\n                  <TableCell>Assembly-ID</TableCell>\n                  <TableCell>A0</TableCell>\n                  <TableCell>A + A Non-Negative Int (0,1,2...)</TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography variant=\"h6\">BasicBuild Object Types</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Paper variant=\"outlined\" padding=\"10px\">\n            <div style={{ padding: \"10px\" }}>\n              {\"{\"}\n              <div style={{ paddingTop: \"10px\" }}>\n                <span style={{ color: \"#dd1244\" }}>{space4}\"unique_parts\"</span>\n                : {\"{\"}\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                <span style={{ color: \"#1b7fff\" }}>{space8}Unique-Part-ID</span>\n                : {\"{\"}\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                <span style={{ color: \"#dd1244\" }}>{space12}\"sequence\"</span>:{\" \"}\n                <span style={{ color: \"#1b7fff\" }}>DNA-String</span>,\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                <span style={{ color: \"#dd1244\" }}>{space12}\"id\"</span>:{\" \"}\n                <span style={{ color: \"#1b7fff\" }}>String</span>,\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                <span style={{ color: \"#dd1244\" }}>{space12}\"name\"</span>:{\" \"}\n                <span style={{ color: \"#1b7fff\" }}>String</span>,\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                <span style={{ color: \"#dd1244\" }}>{space12}\"description\"</span>\n                : <span style={{ color: \"#1b7fff\" }}>String</span>,\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                <span style={{ color: \"#dd1244\" }}>\n                  {space12}\"suggested stock concentration (ng/µL)\"\n                </span>\n                : <span style={{ color: \"#1b7fff\" }}>Float</span>,\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                <span style={{ color: \"#dd1244\" }}>\n                  {space12}\"stock per 30 µL clip (µL)\"\n                </span>\n                : <span style={{ color: \"#1b7fff\" }}>Int</span>,\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                <span style={{ color: \"#dd1244\" }}>\n                  {space12}\"clip reactions\"\n                </span>\n                :{\" \"}\n                <span style={{ color: \"#1b7fff\" }}>\n                  Array[Clip-Reaction-ID]\n                </span>\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                {space8}\n                {\"}\"}\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                {space4}\n                {\"}\"},\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                <span style={{ color: \"#dd1244\" }}>\n                  {space4}\"unique_linkers\"\n                </span>\n                : {\"{\"}\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                <span style={{ color: \"#1b7fff\" }}>\n                  {space8}Unique-Linker-ID\n                </span>\n                : {\"{\"}\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                <span style={{ color: \"#dd1244\" }}>{space12}\"id\"</span>:{\" \"}\n                <span style={{ color: \"#1b7fff\" }}>String</span>,\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                <span style={{ color: \"#dd1244\" }}>\n                  {space12}\"linker_class\"\n                </span>\n                :{\" \"}\n                <span style={{ color: \"#1b7fff\" }}>\n                  Enum({basiclinker + \",\" + utrlinker})\n                </span>\n                ,\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                <span style={{ color: \"#dd1244\" }}>{space12}\"sequence\"</span>:{\" \"}\n                <span style={{ color: \"#1b7fff\" }}>DNA-String</span>,\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                <span style={{ color: \"#dd1244\" }}>{space12}\"prefix_id\"</span>:{\" \"}\n                <span style={{ color: \"#1b7fff\" }}>String</span>,\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                <span style={{ color: \"#dd1244\" }}>{space12}\"suffix_id\"</span>:{\" \"}\n                <span style={{ color: \"#1b7fff\" }}>String</span>,\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                <span style={{ color: \"#dd1244\" }}>\n                  {space12}\"prefix clip reactions\"\n                </span>\n                :{\" \"}\n                <span style={{ color: \"#1b7fff\" }}>\n                  Array[Clip-Reaction-ID]\n                </span>\n                ,\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                <span style={{ color: \"#dd1244\" }}>\n                  {space12}\"suffix clip reactions\"\n                </span>\n                :{\" \"}\n                <span style={{ color: \"#1b7fff\" }}>\n                  Array[Clip-Reaction-ID]\n                </span>\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                {space8}\n                {\"}\"}\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                {space4}\n                {\"},\"}\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                <span style={{ color: \"#dd1244\" }}>{space4}\"clips_data\"</span>:{\" \"}\n                {\"{\"}\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                <span style={{ color: \"#1b7fff\" }}>\n                  {space8}Clip-Reaction-ID\n                </span>\n                : {\"{\"}\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                <span style={{ color: \"#dd1244\" }}>{space12}\"prefix\"</span>:{\" \"}\n                {\"{\"}\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                <span style={{ color: \"#dd1244\" }}>{space16}\"key\"</span>:{\" \"}\n                <span style={{ color: \"#1b7fff\" }}>Unique-Linker-ID</span>,\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                <span style={{ color: \"#dd1244\" }}>{space16}\"prefix_id\"</span>:{\" \"}\n                <span style={{ color: \"#1b7fff\" }}>String</span>\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                {space12}\n                {\"}\"}\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                <span style={{ color: \"#dd1244\" }}>{space12}\"part\"</span>: {\"{\"}\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                <span style={{ color: \"#dd1244\" }}>{space16}\"key\"</span>:{\" \"}\n                <span style={{ color: \"#1b7fff\" }}>Unique-Part-ID</span>,\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                <span style={{ color: \"#dd1244\" }}>{space16}\"id\"</span>:{\" \"}\n                <span style={{ color: \"#1b7fff\" }}>String</span>,\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                <span style={{ color: \"#dd1244\" }}>{space16}\"name\"</span>:{\" \"}\n                <span style={{ color: \"#1b7fff\" }}>String</span>\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                {space12}\n                {\"}\"},\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                <span style={{ color: \"#dd1244\" }}>{space12}\"suffix\"</span>:{\" \"}\n                {\"{\"}\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                <span style={{ color: \"#dd1244\" }}>{space16}\"key\"</span>:{\" \"}\n                <span style={{ color: \"#1b7fff\" }}>Unique-Linker-ID</span>,\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                <span style={{ color: \"#dd1244\" }}>{space16}\"suffix_id\"</span>:{\" \"}\n                <span style={{ color: \"#1b7fff\" }}>String</span>\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                {space12}\n                {\"}\"},\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                <span style={{ color: \"#dd1244\" }}>\n                  {space12}\"total assemblies\"\n                </span>\n                : <span style={{ color: \"#1b7fff\" }}>Int</span>,\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                <span style={{ color: \"#dd1244\" }}>\n                  {space12}\"assembly keys\"\n                </span>\n                : <span style={{ color: \"#1b7fff\" }}>Array[Assembly-ID]</span>\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                {space8}\n                {\"}\"}\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                {space4}\n                {\"}\"},\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                <span style={{ color: \"#dd1244\" }}>\n                  {space4}\"assembly_data\"\n                </span>\n                : {\"{\"}\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                <span style={{ color: \"#1b7fff\" }}>{space8}Assembly-ID</span>:{\" \"}\n                {\"{\"}\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                <span style={{ color: \"#dd1244\" }}>{space12}\"id\"</span>:{\" \"}\n                <span style={{ color: \"#1b7fff\" }}>String</span>,\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                <span style={{ color: \"#dd1244\" }}>\n                  {space12}\"clip reactions\"\n                </span>\n                :{\" \"}\n                <span style={{ color: \"#1b7fff\" }}>\n                  Array[Clip-Reaction-ID]\n                </span>\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                {space8}\n                {\"}\"}\n              </div>\n              <div style={{ paddingTop: \"10px\" }}>\n                {space4}\n                {\"}\"}\n              </div>\n              {\"}\"}\n            </div>\n          </Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography variant=\"h6\">Example BasicBuild Object</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography variant=\"body1\">\n            An example BasicBuild JSON object can be found in the github\n            repository for basicsynbio:{\" \"}\n            <a href=\"https://github.com/LondonBiofoundry/basicsynbio/blob/master/json_files/test_build.json\">\n              https://github.com/LondonBiofoundry/basicsynbio/blob/master/json_files/test_build.json\n            </a>\n          </Typography>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n",["227","228"],"/Users/benedictcarling/basicsynbio_frontend/src/ContextInitialisation.ts",[],"/Users/benedictcarling/basicsynbio_frontend/src/features/collections/collectionSlice.ts",["229","230","231"],"import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState, AppThunk } from \"../../app/store\";\nimport { Collection } from \"../../generated-sources\";\nimport { retriveCollections } from \"./collectionAPI\";\n\nconst initialState: Collection[] = [];\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const fetchCollections = createAsyncThunk(\n  \"collections/fetchCollections\",\n  async () => {\n    const response = await retriveCollections();\n    // The value we return becomes the `fulfilled` action payload\n    return response;\n  }\n);\n\nexport const collectionsSlice = createSlice({\n  name: \"collections\",\n  initialState,\n  reducers: {},\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder.addCase(fetchCollections.fulfilled, (state, action) => {\n      state.push(...action.payload);\n    });\n  },\n});\n\nexport default collectionsSlice.reducer;\n","/Users/benedictcarling/basicsynbio_frontend/src/pages/Home.tsx",[],"/Users/benedictcarling/basicsynbio_frontend/src/pages/About.tsx",[],"/Users/benedictcarling/basicsynbio_frontend/src/pages/Designer.tsx",[],"/Users/benedictcarling/basicsynbio_frontend/src/components/navbar/navbar.tsx",[],"/Users/benedictcarling/basicsynbio_frontend/src/features/collections/collectionAPI.ts",[],"/Users/benedictcarling/basicsynbio_frontend/src/pages/AboutImages.tsx",[],"/Users/benedictcarling/basicsynbio_frontend/src/pages/AboutPapers.tsx",[],"/Users/benedictcarling/basicsynbio_frontend/src/components/home/hometext.tsx",[],"/Users/benedictcarling/basicsynbio_frontend/src/components/home/homeimg.tsx",[],"/Users/benedictcarling/basicsynbio_frontend/src/components/designer/export/export.tsx",[],"/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/userinput.tsx",["232","233","234","235","236","237","238","239","240"],"/Users/benedictcarling/basicsynbio_frontend/src/components/home/basicsynbio.tsx",[],"/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/standardinput/standardinput.tsx",[],"/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/userinputUtils/snackbar.tsx",[],"/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/userinputUtils/viewbuild.tsx",[],"/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/userinputUtils/visualiseAssembly.tsx",["241","242","243"],"/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/userinputUtils/validateassembly.tsx",["244","245","246","247","248","249","250","251","252","253","254"],"/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/plasmid/plasmid.tsx",[],"/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/custominput/custominput.tsx",[],"/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/userinputUtils/successlottly.tsx",[],"/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/userinputUtils/faillottly.tsx",[],"/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/custominput/custompl.Components/MultipleCheck.tsx",[],"/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/custominput/custompl.Components/addiseq.tsx",[],"/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/custominput/custompl.Components/customShop.tsx",[],"/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/custominput/custompl.Components/genbank.tsx",["255"],"/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/custominput/custompl.Components/SBOL.tsx",["256"],"/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/custominput/custompl.Components/uploadIMG.tsx",[],"/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/standardinput/standardpl.Components/standardCopyable.tsx",[],"/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/plasmid/plasmid.Components/shoppingbag.tsx",[],"/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/plasmid/plasmid.Components/successLotty.tsx",[],"/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/plasmid/plasmid.Components/bagitemmodal.tsx",["257","258","259","260","261"],"/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/plasmid/plasmid.Components/combinatorialPopup.tsx",["262"],"/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/standardinput/standardpl.Components/standardShop.tsx",[],"/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/standardinput/standardpl.Components/searchPart.tsx",["263","264","265","266"],"import React, { useContext } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport fetch from \"cross-fetch\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { ApiEndpoint } from \"../../../../../Api\";\nimport { Context } from \"../../../../../App\";\nimport { Collection, BasicPart } from \"../../../../../generated-sources\";\n\ninterface Props {\n  value: BasicPart | undefined;\n  onChangeValue: React.Dispatch<React.SetStateAction<BasicPart | undefined>>;\n  clickedCollections: Collection[\"name\"][];\n  partOptions: BasicPart[];\n  setPartOptions: React.Dispatch<React.SetStateAction<BasicPart[]>>;\n}\n\nexport const SearchPart: React.FC<Props> = ({\n  value,\n  onChangeValue,\n  clickedCollections,\n  partOptions,\n  setPartOptions,\n}) => {\n  const { names, collections } = useContext(Context);\n  const [inputValue, setInputValue] = React.useState<string>();\n  const [open, setOpen] = React.useState<boolean>(false);\n  const loading = open && partOptions.length === 0;\n\n  React.useEffect(() => {\n    let active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n    (async () => {\n      if (clickedCollections.length === 0) {\n        setOpen(false);\n      }\n      const collectionsData: Collection[] = collections;\n      console.log(collectionsData);\n      var mergedArray = [];\n\n      const clickedCollectionsArray = clickedCollections;\n\n      console.log(\"clicked collections\", clickedCollectionsArray);\n\n      for (let selectedCollection of collectionsData) {\n        console.log(selectedCollection.name, clickedCollectionsArray);\n        if (clickedCollectionsArray.includes(selectedCollection.name)) {\n          console.log(\"selected collection to render\", selectedCollection);\n          for (let part of selectedCollection.versions[0].parts) {\n            console.log(part);\n            mergedArray.push(part);\n          }\n        }\n      }\n\n      if (active) {\n        console.log(\"merged array\", mergedArray);\n        setPartOptions(mergedArray);\n      }\n      return () => {\n        active = false;\n      };\n    })();\n  }, [loading, clickedCollections]);\n\n  React.useEffect(() => {\n    if (!open) {\n      setPartOptions([]);\n    }\n  }, [open, setPartOptions]);\n\n  return (\n    <Autocomplete\n      id=\"asynchronous-demo\"\n      style={{ width: \"100%\" }}\n      value={value}\n      onChange={(event: any, newValue: BasicPart | null) => {\n        if (newValue !== null) {\n          onChangeValue(newValue);\n        }\n      }}\n      inputValue={inputValue}\n      onInputChange={(event, newInputValue) => {\n        setInputValue(newInputValue);\n      }}\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      getOptionSelected={(option, value) => value.label === option.label}\n      getOptionLabel={(option) => option.label ?? \"\"}\n      options={partOptions}\n      loading={loading}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"Select Part\"\n          variant=\"outlined\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? (\n                  <CircularProgress color=\"inherit\" size={20} />\n                ) : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n};\n","/Users/benedictcarling/basicsynbio_frontend/src/components/designer/userinput/standardinput/standardpl.Components/seachCollection.tsx",["267","268","269","270"],"import React, { useContext, useState } from \"react\";\nimport {\n  Checkbox,\n  TextField,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  InputLabel,\n  Input,\n  FormControl,\n  Select,\n  Typography,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport fetch from \"cross-fetch\";\nimport { ApiEndpoint } from \"../../../../../Api\";\nimport { Collection } from \"../../../../../generated-sources\";\nimport { Context } from \"../../../../../App\";\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n    marginTop: theme.spacing(2),\n    textAlign: \"center\",\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  formControl: {\n    marginTop: theme.spacing(1),\n    width: \"100%\",\n  },\n  selectcolumn: {\n    width: \"100%\",\n    paddingTop: \"10px\",\n  },\n}));\n\ninterface Props {\n  clickedCollections: Collection[\"name\"][];\n  setClickedCollections: React.Dispatch<\n    React.SetStateAction<Collection[\"name\"][]>\n  >;\n  collections: Collection[\"name\"][];\n  setCollections: React.Dispatch<React.SetStateAction<Collection[\"name\"][]>>;\n}\n\nexport const SearchCollection: React.FC<Props> = ({\n  clickedCollections,\n  setClickedCollections,\n  collections,\n  setCollections,\n}) => {\n  const { names } = useContext(Context);\n  const classes = useStyles();\n  const [open, setOpen] = useState<boolean>(false);\n  const loading = open && collections.length === 0;\n\n  //Popup Components\n  const [versionOpen, setVersionOpen] = useState<boolean>(false);\n  const [age, setAge] = React.useState<string>(\"\");\n  const handleChange = (\n    event: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => {\n    setAge(String(event.target.value) || \"\");\n  };\n\n  const handleVersionClose = () => {\n    setVersionOpen(false);\n  };\n\n  React.useEffect(() => {\n    let active = true;\n    if (!loading) {\n      return undefined;\n    }\n    (async () => {\n      if (active) {\n        setCollections(names);\n      }\n    })();\n    return () => {\n      active = false;\n    };\n  }, [loading]);\n\n  React.useEffect(() => {\n    if (!open) {\n      setCollections([]);\n    }\n  }, [open]);\n\n  function HandleClickOnChip(event: any) {\n    setClickedCollections(\n      event.target.outerText.substring(0, event.target.outerText.length - 7)\n    );\n    setVersionOpen(true);\n  }\n\n  return (\n    <div>\n      <div className={classes.root}>\n        <Autocomplete\n          onChange={(event: any, value: string[]) => {\n            setClickedCollections(value);\n            console.log(value);\n          }}\n          ChipProps={{ clickable: true, onClick: HandleClickOnChip }}\n          multiple\n          open={open}\n          onOpen={() => {\n            setOpen(true);\n          }}\n          onClose={() => {\n            setOpen(false);\n          }}\n          fullWidth\n          getOptionLabel={(option) => option + String(\" | v0.1\")}\n          options={collections}\n          loading={loading}\n          disableCloseOnSelect\n          renderOption={(option, { selected }) => (\n            <React.Fragment>\n              {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n              <Checkbox\n                icon={icon}\n                checkedIcon={checkedIcon}\n                style={{ marginRight: 8 }}\n                checked={selected}\n              />\n              {option}\n            </React.Fragment>\n          )}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              variant=\"outlined\"\n              label=\"Add Collections in which you want to search from\"\n              placeholder=\"Search Collections\"\n            />\n          )}\n        />\n      </div>\n      <Dialog\n        disableBackdropClick\n        disableEscapeKeyDown\n        open={versionOpen}\n        onClose={handleVersionClose}\n      >\n        <DialogTitle>Select Desired Version</DialogTitle>\n        <Divider variant=\"middle\" />\n        <DialogContent>\n          <Typography color=\"textSecondary\">{clickedCollections}</Typography>\n          <form className={classes.container}>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"demo-dialog-native\">Version</InputLabel>\n              <Select\n                autoWidth\n                native\n                value={age}\n                onChange={handleChange}\n                input={<Input id=\"demo-dialog-native\" />}\n              >\n                <option aria-label=\"None\" value=\"\" />\n                <option value={10}>v0.1</option>\n              </Select>\n            </FormControl>\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleVersionClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleVersionClose} color=\"primary\">\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","/Users/benedictcarling/basicsynbio_frontend/src/components/designer/export/PDF.Components/pdf.tsx",[],"/Users/benedictcarling/basicsynbio_frontend/src/components/designer/export/ECHO.Components/echo.tsx",[],"/Users/benedictcarling/basicsynbio_frontend/src/components/designer/export/UniqueAssemblies.Components/UniqueAssemblies.tsx",[],"/Users/benedictcarling/basicsynbio_frontend/src/components/designer/export/UniqueParts.Components/UniqueParts.tsx",[],"/Users/benedictcarling/basicsynbio_frontend/src/components/designer/export/JSON.Components/JSONCard.tsx",[],"/Users/benedictcarling/basicsynbio_frontend/src/components/designer/export/CSV.Components/csvcard.tsx",[],"/Users/benedictcarling/basicsynbio_frontend/src/Api.ts",[],"/Users/benedictcarling/basicsynbio_frontend/src/generated-sources/index.ts",[],"/Users/benedictcarling/basicsynbio_frontend/src/generated-sources/configuration.ts",[],"/Users/benedictcarling/basicsynbio_frontend/src/generated-sources/api.ts",[],"/Users/benedictcarling/basicsynbio_frontend/src/generated-sources/base.ts",[],"/Users/benedictcarling/basicsynbio_frontend/src/generated-sources/common.ts",[],{"ruleId":"271","replacedBy":"272"},{"ruleId":"273","replacedBy":"274"},{"ruleId":"275","severity":1,"message":"276","line":23,"column":7,"nodeType":"277","messageId":"278","endLine":23,"endColumn":17},{"ruleId":"271","replacedBy":"272"},{"ruleId":"273","replacedBy":"274"},{"ruleId":"279","severity":1,"message":"280","line":1,"column":41,"nodeType":"277","messageId":"278","endLine":1,"endColumn":54},{"ruleId":"279","severity":1,"message":"281","line":2,"column":10,"nodeType":"277","messageId":"278","endLine":2,"endColumn":19},{"ruleId":"279","severity":1,"message":"282","line":2,"column":21,"nodeType":"277","messageId":"278","endLine":2,"endColumn":29},{"ruleId":"283","severity":1,"message":"284","line":71,"column":36,"nodeType":"285","messageId":"286","endLine":71,"endColumn":38},{"ruleId":"283","severity":1,"message":"287","line":76,"column":24,"nodeType":"285","messageId":"286","endLine":76,"endColumn":26},{"ruleId":"283","severity":1,"message":"284","line":181,"column":60,"nodeType":"285","messageId":"286","endLine":181,"endColumn":62},{"ruleId":"283","severity":1,"message":"284","line":196,"column":60,"nodeType":"285","messageId":"286","endLine":196,"endColumn":62},{"ruleId":"283","severity":1,"message":"284","line":199,"column":38,"nodeType":"285","messageId":"286","endLine":199,"endColumn":40},{"ruleId":"279","severity":1,"message":"288","line":206,"column":13,"nodeType":"277","messageId":"278","endLine":206,"endColumn":38},{"ruleId":"289","severity":1,"message":"290","line":207,"column":42,"nodeType":"291","messageId":"292","endLine":207,"endColumn":44},{"ruleId":"283","severity":1,"message":"287","line":210,"column":71,"nodeType":"285","messageId":"286","endLine":210,"endColumn":73},{"ruleId":"283","severity":1,"message":"284","line":232,"column":60,"nodeType":"285","messageId":"286","endLine":232,"endColumn":62},{"ruleId":"293","severity":1,"message":"294","line":117,"column":6,"nodeType":"295","endLine":117,"endColumn":31,"suggestions":"296"},{"ruleId":"293","severity":1,"message":"297","line":175,"column":6,"nodeType":"295","endLine":175,"endColumn":53,"suggestions":"298"},{"ruleId":"299","severity":1,"message":"300","line":295,"column":15,"nodeType":"301","endLine":298,"endColumn":17},{"ruleId":"283","severity":1,"message":"284","line":45,"column":38,"nodeType":"285","messageId":"286","endLine":45,"endColumn":40},{"ruleId":"283","severity":1,"message":"287","line":50,"column":26,"nodeType":"285","messageId":"286","endLine":50,"endColumn":28},{"ruleId":"283","severity":1,"message":"284","line":73,"column":60,"nodeType":"285","messageId":"286","endLine":73,"endColumn":62},{"ruleId":"283","severity":1,"message":"284","line":77,"column":38,"nodeType":"285","messageId":"286","endLine":77,"endColumn":40},{"ruleId":"279","severity":1,"message":"288","line":84,"column":13,"nodeType":"277","messageId":"278","endLine":84,"endColumn":38},{"ruleId":"289","severity":1,"message":"290","line":85,"column":42,"nodeType":"291","messageId":"292","endLine":85,"endColumn":44},{"ruleId":"283","severity":1,"message":"287","line":88,"column":71,"nodeType":"285","messageId":"286","endLine":88,"endColumn":73},{"ruleId":"283","severity":1,"message":"284","line":132,"column":60,"nodeType":"285","messageId":"286","endLine":132,"endColumn":62},{"ruleId":"283","severity":1,"message":"284","line":153,"column":60,"nodeType":"285","messageId":"286","endLine":153,"endColumn":62},{"ruleId":"279","severity":1,"message":"302","line":203,"column":7,"nodeType":"277","messageId":"278","endLine":203,"endColumn":13},{"ruleId":"293","severity":1,"message":"303","line":205,"column":6,"nodeType":"295","endLine":205,"endColumn":37,"suggestions":"304"},{"ruleId":"293","severity":1,"message":"305","line":122,"column":5,"nodeType":"295","endLine":122,"endColumn":35,"suggestions":"306"},{"ruleId":"293","severity":1,"message":"305","line":64,"column":6,"nodeType":"295","endLine":64,"endColumn":8,"suggestions":"307"},{"ruleId":"279","severity":1,"message":"308","line":14,"column":8,"nodeType":"277","messageId":"278","endLine":14,"endColumn":18},{"ruleId":"279","severity":1,"message":"309","line":20,"column":8,"nodeType":"277","messageId":"278","endLine":20,"endColumn":19},{"ruleId":"293","severity":1,"message":"310","line":117,"column":6,"nodeType":"295","endLine":117,"endColumn":12,"suggestions":"311"},{"ruleId":"293","severity":1,"message":"312","line":173,"column":6,"nodeType":"295","endLine":173,"endColumn":25,"suggestions":"313"},{"ruleId":"299","severity":1,"message":"300","line":292,"column":15,"nodeType":"301","endLine":295,"endColumn":17},{"ruleId":"279","severity":1,"message":"314","line":23,"column":8,"nodeType":"277","messageId":"278","endLine":23,"endColumn":16},{"ruleId":"279","severity":1,"message":"315","line":4,"column":8,"nodeType":"277","messageId":"278","endLine":4,"endColumn":13},{"ruleId":"279","severity":1,"message":"316","line":6,"column":10,"nodeType":"277","messageId":"278","endLine":6,"endColumn":21},{"ruleId":"279","severity":1,"message":"317","line":25,"column":11,"nodeType":"277","messageId":"278","endLine":25,"endColumn":16},{"ruleId":"293","severity":1,"message":"318","line":67,"column":6,"nodeType":"295","endLine":67,"endColumn":35,"suggestions":"319"},{"ruleId":"279","severity":1,"message":"315","line":22,"column":8,"nodeType":"277","messageId":"278","endLine":22,"endColumn":13},{"ruleId":"279","severity":1,"message":"316","line":23,"column":10,"nodeType":"277","messageId":"278","endLine":23,"endColumn":21},{"ruleId":"293","severity":1,"message":"320","line":102,"column":6,"nodeType":"295","endLine":102,"endColumn":15,"suggestions":"321"},{"ruleId":"293","severity":1,"message":"322","line":108,"column":6,"nodeType":"295","endLine":108,"endColumn":12,"suggestions":"323"},"no-native-reassign",["324"],"no-negated-in-lhs",["325"],"no-unused-vars","'components' is assigned a value but never used.","Identifier","unusedVar","@typescript-eslint/no-unused-vars","'PayloadAction' is defined but never used.","'RootState' is defined but never used.","'AppThunk' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'old_shopping' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'shoppingBagItems'. Either include it or remove the dependency array.","ArrayExpression",["326"],"React Hook React.useEffect has missing dependencies: 'process' and 'shoppingBagItems'. Either include them or remove the dependency array.",["327"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'active' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'setValidated' and 'shoppingBagItems'. Either include them or remove the dependency array. If 'setValidated' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["328"],"React Hook useCallback has a missing dependency: 'ValidateFileUpload'. Either include it or remove the dependency array.",["329"],["330"],"'SearchIcon' is defined but never used.","'ButtonGroup' is defined but never used.","React Hook React.useEffect has a missing dependency: 'item'. Either include it or remove the dependency array.",["331"],"React Hook React.useEffect has missing dependencies: 'item' and 'process'. Either include them or remove the dependency array.",["332"],"'WifiIcon' is defined but never used.","'fetch' is defined but never used.","'ApiEndpoint' is defined but never used.","'names' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'collections' and 'setPartOptions'. Either include them or remove the dependency array. If 'setPartOptions' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["333"],"React Hook React.useEffect has missing dependencies: 'names' and 'setCollections'. Either include them or remove the dependency array. If 'setCollections' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["334"],"React Hook React.useEffect has a missing dependency: 'setCollections'. Either include it or remove the dependency array. If 'setCollections' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["335"],"no-global-assign","no-unsafe-negation",{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},"Update the dependencies array to be: [openPopups.viewAssembly, shoppingBagItems]",{"range":"356","text":"357"},"Update the dependencies array to be: [selectedSeqQualifier, openPopups.viewAssembly, shoppingBagItems, process]",{"range":"358","text":"359"},"Update the dependencies array to be: [openPopups.validationAssembly, setValidated, shoppingBagItems]",{"range":"360","text":"361"},"Update the dependencies array to be: [ValidateFileUpload, multiplePartLinkers, addiseq]",{"range":"362","text":"363"},"Update the dependencies array to be: [ValidateFileUpload]",{"range":"364","text":"365"},"Update the dependencies array to be: [item, open]",{"range":"366","text":"367"},"Update the dependencies array to be: [item, process, selectedQualifier]",{"range":"368","text":"369"},"Update the dependencies array to be: [loading, clickedCollections, collections, setPartOptions]",{"range":"370","text":"371"},"Update the dependencies array to be: [loading, names, setCollections]",{"range":"372","text":"373"},"Update the dependencies array to be: [open, setCollections]",{"range":"374","text":"375"},[3802,3827],"[openPopups.viewAssembly, shoppingBagItems]",[5280,5327],"[selectedSeqQualifier, openPopups.viewAssembly, shoppingBagItems, process]",[6990,7021],"[openPopups.validationAssembly, setValidated, shoppingBagItems]",[3660,3690],"[ValidateFileUpload, multiplePartLinkers, addiseq]",[2028,2030],"[ValidateFileUpload]",[3891,3897],"[item, open]",[5277,5296],"[item, process, selectedQualifier]",[2131,2160],"[loading, clickedCollections, collections, setPartOptions]",[2458,2467],"[loading, names, setCollections]",[2551,2557],"[open, setCollections]"]