[{"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/Pages/Home.js":"1","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/Pages/Designer.js":"2","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/Pages/Basic.js":"3","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/Components/navbar/navbar.js":"4","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/Pages/AboutImages.js":"5","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/Pages/AboutPapers.js":"6","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/Components/home/homeimg.js":"7","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/Components/home/hometext.js":"8","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/Components/navbar/drawbar.js":"9","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/Components/designer/export/export.js":"10","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/Components/home/basicsynbio.js":"11","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/Components/designer/export/CSV.Components/csvcard.js":"12","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/Components/designer/export/JSON.Components/JSONCard.js":"13","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/Components/designer/export/UniqueAssemblies.Components/UniqueAssemblies.js":"14","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/Components/designer/export/UniqueParts.Components/UniqueParts.js":"15","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/index.tsx":"16","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/App.tsx":"17","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/reportWebVitals.ts":"18","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/ApiConnection.ts":"19","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/Pages/About.js":"20","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/pages/Home.js":"21","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/pages/About.js":"22","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/pages/Designer.js":"23","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/navbar/navbar.js":"24","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/pages/Basic.js":"25","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/navbar/drawbar.js":"26","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/pages/AboutPapers.js":"27","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/pages/AboutImages.js":"28","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/home/homeimg.js":"29","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/home/hometext.js":"30","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/export/export.js":"31","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/home/basicsynbio.js":"32","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/export/UniqueAssemblies.Components/UniqueAssemblies.js":"33","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/export/JSON.Components/JSONCard.js":"34","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/export/CSV.Components/csvcard.js":"35","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/export/UniqueParts.Components/UniqueParts.js":"36","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/plasmid/plasmid.js":"37","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/userinputUtils/visualiseAssembly.js":"38","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/userinputUtils/viewbuild.js":"39","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/userinputUtils/validateassembly.js":"40","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/userinputUtils/snackbar.js":"41","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/userinputUtils/successlottly.js":"42","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/userinputUtils/faillottly.js":"43","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/plasmid/plasmid.Components/shoppingbag.js":"44","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/plasmid/plasmid.Components/successLotty.js":"45","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/plasmid/plasmid.Components/bagitemmodal.js":"46","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/custominput/custominput.js":"47","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/custominput/custompl.Components/genbank.js":"48","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/custominput/custompl.Components/fasta.js":"49","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/custominput/custompl.Components/shop.js":"50","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/custominput/custompl.Components/SBOL.js":"51","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/custominput/custompl.Components/MultipleCheck.js":"52","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/custominput/custompl.Components/uploadIMG.tsx":"53","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/standardinput/standardpl.Components/seachCollection.tsx":"54","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/standardinput/standardpl.Components/searchPart.tsx":"55","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/userinput.tsx":"56","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/standardinput/standardpl.Components/standardShop.tsx":"57","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/standardinput/standardpl.Components/standardCopyable.tsx":"58","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/standardinput/standardinput.tsx":"59"},{"size":851,"mtime":1611501625307,"results":"60","hashOfConfig":"61"},{"size":3329,"mtime":1611501625307,"results":"62","hashOfConfig":"61"},{"size":91,"mtime":1611428152914,"results":"63","hashOfConfig":"61"},{"size":2266,"mtime":1611337966710,"results":"64","hashOfConfig":"61"},{"size":3398,"mtime":1611338750102,"results":"65","hashOfConfig":"61"},{"size":2239,"mtime":1611337356515,"results":"66","hashOfConfig":"61"},{"size":1018,"mtime":1609325957589,"results":"67","hashOfConfig":"61"},{"size":1635,"mtime":1610977667260,"results":"68","hashOfConfig":"61"},{"size":3180,"mtime":1611057088041,"results":"69","hashOfConfig":"61"},{"size":942,"mtime":1609325957586,"results":"70","hashOfConfig":"61"},{"size":11017,"mtime":1609327164148,"results":"71","hashOfConfig":"61"},{"size":1793,"mtime":1611410224783,"results":"72","hashOfConfig":"61"},{"size":1796,"mtime":1611410224783,"results":"73","hashOfConfig":"61"},{"size":1912,"mtime":1611410824471,"results":"74","hashOfConfig":"61"},{"size":1866,"mtime":1611410224783,"results":"75","hashOfConfig":"61"},{"size":419,"mtime":1611499149779,"results":"76","hashOfConfig":"61"},{"size":691,"mtime":1611501625283,"results":"77","hashOfConfig":"61"},{"size":425,"mtime":1611499054423,"results":"78","hashOfConfig":"61"},{"size":285,"mtime":1611504616835,"results":"79","hashOfConfig":"61"},{"size":3025,"mtime":1611501341038,"results":"80","hashOfConfig":"61"},{"size":851,"mtime":1611501625307,"results":"81","hashOfConfig":"61"},{"size":3025,"mtime":1611501341038,"results":"82","hashOfConfig":"61"},{"size":3333,"mtime":1611508098786,"results":"83","hashOfConfig":"61"},{"size":2266,"mtime":1611337966710,"results":"84","hashOfConfig":"61"},{"size":91,"mtime":1611428152914,"results":"85","hashOfConfig":"61"},{"size":3180,"mtime":1611057088041,"results":"86","hashOfConfig":"61"},{"size":2239,"mtime":1611337356515,"results":"87","hashOfConfig":"61"},{"size":3398,"mtime":1611338750102,"results":"88","hashOfConfig":"61"},{"size":1018,"mtime":1609325957589,"results":"89","hashOfConfig":"61"},{"size":1635,"mtime":1610977667260,"results":"90","hashOfConfig":"61"},{"size":942,"mtime":1609325957586,"results":"91","hashOfConfig":"61"},{"size":11017,"mtime":1609327164148,"results":"92","hashOfConfig":"61"},{"size":1912,"mtime":1611410824471,"results":"93","hashOfConfig":"61"},{"size":1796,"mtime":1611410224783,"results":"94","hashOfConfig":"61"},{"size":1793,"mtime":1611410224783,"results":"95","hashOfConfig":"61"},{"size":1866,"mtime":1611410224783,"results":"96","hashOfConfig":"61"},{"size":3167,"mtime":1611502156514,"results":"97","hashOfConfig":"61"},{"size":6860,"mtime":1611410224743,"results":"98","hashOfConfig":"61"},{"size":5500,"mtime":1609325957589,"results":"99","hashOfConfig":"61"},{"size":2943,"mtime":1611410224587,"results":"100","hashOfConfig":"61"},{"size":485,"mtime":1609325957588,"results":"101","hashOfConfig":"61"},{"size":866,"mtime":1609325957588,"results":"102","hashOfConfig":"61"},{"size":865,"mtime":1609325957588,"results":"103","hashOfConfig":"61"},{"size":3783,"mtime":1609325957587,"results":"104","hashOfConfig":"61"},{"size":597,"mtime":1609325957587,"results":"105","hashOfConfig":"61"},{"size":6540,"mtime":1611502192316,"results":"106","hashOfConfig":"61"},{"size":3674,"mtime":1611501918053,"results":"107","hashOfConfig":"61"},{"size":4219,"mtime":1611502319397,"results":"108","hashOfConfig":"61"},{"size":3913,"mtime":1611502333783,"results":"109","hashOfConfig":"61"},{"size":321,"mtime":1611509270974,"results":"110","hashOfConfig":"61"},{"size":2248,"mtime":1611502346894,"results":"111","hashOfConfig":"61"},{"size":625,"mtime":1609325957586,"results":"112","hashOfConfig":"61"},{"size":595,"mtime":1611491114993,"results":"113","hashOfConfig":"61"},{"size":5419,"mtime":1611503687424,"results":"114","hashOfConfig":"61"},{"size":3483,"mtime":1611508355911,"results":"115","hashOfConfig":"61"},{"size":10322,"mtime":1611510128116,"results":"116","hashOfConfig":"61"},{"size":503,"mtime":1611509159830,"results":"117","hashOfConfig":"61"},{"size":3093,"mtime":1611509434144,"results":"118","hashOfConfig":"61"},{"size":3136,"mtime":1611509938244,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"1pqt787",{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"122"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"165"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"165"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"165"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"165"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"165"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"165"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"165"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"154"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"154"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/Pages/Home.js",[],["250","251"],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/Pages/Designer.js",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/Pages/Basic.js",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/Components/navbar/navbar.js",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/Pages/AboutImages.js",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/Pages/AboutPapers.js",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/Components/home/homeimg.js",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/Components/home/hometext.js",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/Components/navbar/drawbar.js",["252"],"import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport GestureIcon from \"@material-ui/icons/Gesture\";\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\nimport PostAddIcon from \"@material-ui/icons/PostAdd\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: \"auto\",\n  },\n});\n\nexport default function TemporaryDrawer() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const navStyle = {\n    color: \"black\",\n    textDecoration: \"none\",\n  };\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        <Link style={navStyle} to=\"/\">\n          <ListItem button key={\"Home\"}>\n            <ListItemIcon>\n              <HomeIcon />\n            </ListItemIcon>\n            <ListItemText primary={\"Home\"} />\n          </ListItem>\n        </Link>\n        <Link style={navStyle} to=\"/about\">\n          <ListItem button key={\"About\"}>\n            <ListItemIcon>\n              <DescriptionIcon />\n            </ListItemIcon>\n            <ListItemText primary={\"About\"} />\n          </ListItem>\n        </Link>\n        <Link style={navStyle} to=\"/basic\">\n          <ListItem button key={\"Basic\"}>\n            <ListItemIcon>\n              <GestureIcon />\n            </ListItemIcon>\n            <ListItemText primary={\"Basic\"} />\n          </ListItem>\n        </Link>\n        <Link style={navStyle} to=\"/designer\">\n          <ListItem button key={\"Designer\"}>\n            <ListItemIcon>\n              <PostAddIcon />\n            </ListItemIcon>\n            <ListItemText primary={\"Designer\"} />\n          </ListItem>\n        </Link>\n      </List>\n    </div>\n  );\n\n  return (\n    <div>\n      {[\"right\"].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <IconButton onClick={toggleDrawer(anchor, true)}>\n            <MenuIcon />\n          </IconButton>\n          <Drawer\n            anchor={anchor}\n            open={state[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n          >\n            {list(anchor)}\n          </Drawer>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/Components/designer/export/export.js",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/Components/home/basicsynbio.js",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/Components/designer/export/CSV.Components/csvcard.js",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/Components/designer/export/JSON.Components/JSONCard.js",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/Components/designer/export/UniqueAssemblies.Components/UniqueAssemblies.js",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/Components/designer/export/UniqueParts.Components/UniqueParts.js",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/index.tsx",[],["253","254"],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/App.tsx",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/reportWebVitals.ts",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/ApiConnection.ts",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/Pages/About.js",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/pages/Home.js",[],["255","256"],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/pages/About.js",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/pages/Designer.js",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/navbar/navbar.js",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/pages/Basic.js",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/navbar/drawbar.js",["257"],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/pages/AboutPapers.js",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/pages/AboutImages.js",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/home/homeimg.js",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/home/hometext.js",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/export/export.js",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/home/basicsynbio.js",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/export/UniqueAssemblies.Components/UniqueAssemblies.js",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/export/JSON.Components/JSONCard.js",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/export/CSV.Components/csvcard.js",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/export/UniqueParts.Components/UniqueParts.js",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/plasmid/plasmid.js",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/userinputUtils/visualiseAssembly.js",["258","259","260","261","262","263"],"import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { SeqViz } from \"seqviz\";\nimport { ApiEndpoint } from \"../../../../ApiConnection\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n  SeqVizDiv: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n}));\n\nexport default function VisualiseAssembly(props) {\n  const classes = useStyles();\n  const [seqLabel, setSeqLabel] = useState([\"Feature\"]);\n  const [selectedSeqQualifier, setSelectedSeqQualifier] = useState(\"Feature\");\n  const [assemblySequence, setAssemblySequence] = useState(\"\");\n  const [assemblySequenceErr, setAssemblySequenceErr] = useState(\"\");\n  const [returnSeq, setReturnSeq] = useState(\"\");\n  const [annotationsSeqSet, setAnnotationsSeqSet] = useState([]);\n  const userWidth =\n    window.innerWidth ||\n    document.documentElement.clientWidth ||\n    document.body.clientWidth;\n  const userHeight =\n    window.innerHeight ||\n    document.documentElement.clientHeight ||\n    document.body.clientHeight;\n\n  //////\n  React.useEffect(() => {\n    (async () => {\n      const responselabels = await fetch(ApiEndpoint + \"viewseqlabels\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(props.shoppingBagItems),\n      });\n      const resultlabels = await responselabels.json();\n      if (!resultlabels.error) setSeqLabel(resultlabels);\n    })();\n  }, [props.open]);\n\n  function random_color() {\n    const colorCodes = [\n      \"#9DEAED\", // cyan\n      \"#8FDE8C\", // green\n      \"#CFF283\", // light green\n      \"#8CDEBD\", // teal\n      \"#F0A3CE\", // pink\n      \"#F7C672\", // orange\n      \"#F07F7F\", // red\n      \"#FAA887\", // red-orange\n      \"#F099F7\", // magenta\n      \"#C59CFF\", // purple\n      \"#6B81FF\", // blue\n      \"#85A6FF\", // light blue\n    ];\n    return colorCodes[Math.floor(Math.random() * colorCodes.length)];\n  }\n\n  function process(entry) {\n    if (entry)\n      return {\n        name: entry.name,\n        start: entry.start,\n        end: entry.end,\n        direction: entry.direction,\n        color: random_color(),\n      };\n    else return;\n  }\n\n  React.useEffect(() => {\n    (async () => {\n      const response = await fetch(\n        ApiEndpoint +\n          \"assemblySeq?qualifier=\" +\n          JSON.stringify(selectedSeqQualifier),\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(props.shoppingBagItems),\n        }\n      );\n      const result = await response.json();\n      if (!result.err) {\n        try {\n          var filtered = result.annotated.filter(Boolean);\n          var processed = filtered.map(process);\n          setAnnotationsSeqSet(processed);\n          setReturnSeq(result.seq);\n        } catch (err) {\n          console.log(\"error filtering\", err);\n        }\n      }\n    })();\n  }, [selectedSeqQualifier, props.open]);\n\n  React.useEffect(() => {\n    if (!props.open) {\n      setSeqLabel([]);\n      setSelectedSeqQualifier(\"Feature\");\n      setReturnSeq(\"\");\n    }\n  }, [props.open]);\n\n  const SeqVizComponent = () => {\n    if (selectedSeqQualifier === \"Feature\") {\n      return (\n        <SeqViz\n          name=\"J23100\"\n          seq={returnSeq}\n          annotations={annotationsSeqSet}\n          viewer=\"linear\"\n          style={{ height: userHeight, width: userWidth }}\n        />\n      );\n    } else {\n      return (\n        <SeqViz\n          name=\"item\"\n          seq={returnSeq}\n          annotations={annotationsSeqSet}\n          viewer=\"linear\"\n          style={{ height: userHeight, width: userWidth }}\n        />\n      );\n    }\n  };\n\n  return (\n    <>\n      <Dialog\n        fullScreen\n        open={props.open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={props.handleClose}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <AppBar className={classes.appBar} color=\"secondary\">\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              onClick={props.handleClose}\n              aria-label=\"close\"\n            >\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              Current Assembly Sequence\n            </Typography>\n            <Typography variant=\"h6\" className={classes.title}>\n              Current Annotation: {selectedSeqQualifier}\n            </Typography>\n            <div className={classes.search}>\n              <Autocomplete\n                color=\"white\"\n                id=\"seq-qualifiers\"\n                options={seqLabel ? seqLabel : [\"Feauture\"]}\n                getOptionLabel={(option) => option}\n                value={selectedSeqQualifier}\n                onChange={(event, newValue) => {\n                  setSelectedSeqQualifier(newValue);\n                }}\n                style={{\n                  width: 400,\n                  background: \"white\",\n                  borderRadius: \"5px\",\n                }}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Search Qualifiers to change Annotation...\"\n                    variant=\"filled\"\n                  />\n                )}\n              />\n            </div>\n          </Toolbar>\n        </AppBar>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            the selected part is from the collection: {props.itemcollection}\n          </DialogContentText>\n          <div className={classes.SeqVizDiv}>\n            <SeqVizComponent />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/userinputUtils/viewbuild.js",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/userinputUtils/validateassembly.js",["264","265"],"import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport SuccessAnimation from \"./successlottly\";\nimport FailAnimation from \"./faillottly\";\nimport { ApiEndpoint } from \"../../../../ApiConnection\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function ValidateAssembly(props) {\n  const [validation, setValidation] = useState(\"\");\n\n  React.useEffect(() => {\n    let active = true;\n    (async () => {\n      const response = await fetch(ApiEndpoint + \"validate\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(props.shoppingBagItems),\n      });\n      const myresponse = await response.json();\n      if (\n        String(myresponse.result) === \"success\" &&\n        props.validated !== \"success\"\n      ) {\n        setValidation(String(myresponse.result));\n        props.setValidated(true);\n      } else {\n        setValidation(String(myresponse.error));\n        props.setValidated(false);\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [props.open]);\n\n  function FailSuccess() {\n    return validation === \"success\" ? (\n      <SuccessAnimation open={props.open} />\n    ) : (\n      <FailAnimation open={props.open} />\n    );\n  }\n\n  return (\n    <>\n      <Dialog\n        open={props.open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={props.handleClose}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle\n          id=\"alert-dialog-slide-title\"\n          style={{ textAlign: \"center\" }}\n        >\n          Validation\n        </DialogTitle>\n        <Divider />\n        <DialogContent>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-around\"\n            alignItems=\"center\"\n            spacing={2}\n          >\n            <Grid item>\n              <FailSuccess />\n            </Grid>\n            <Grid item>\n              <DialogContentText id=\"alert-dialog-slide-description\">\n                Result of Validation: {validation}\n              </DialogContentText>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/userinputUtils/snackbar.js",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/userinputUtils/successlottly.js",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/userinputUtils/faillottly.js",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/plasmid/plasmid.Components/shoppingbag.js",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/plasmid/plasmid.Components/successLotty.js",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/plasmid/plasmid.Components/bagitemmodal.js",["266","267","268"],"import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { SeqViz } from \"seqviz\";\nimport { ApiEndpoint } from \"../../../../../ApiConnection\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n  SeqVizDiv: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\nexport default function BagItemModal(props) {\n  const classes = useStyles();\n  const [label, setLabel] = useState([]);\n  const [selectedQualifier, setSelectedQualifier] = useState(\"Feature\");\n  const [returnedSeq, setReturnedSeq] = useState(\"\");\n  const [annotationsSet, setAnnotationsSet] = useState([]);\n  const userWidth =\n    window.innerWidth ||\n    document.documentElement.clientWidth ||\n    document.body.clientWidth;\n  const userHeight =\n    window.innerHeight ||\n    document.documentElement.clientHeight ||\n    document.body.clientHeight;\n\n  React.useEffect(() => {\n    if (!props.open) {\n      setLabel([]);\n      setSelectedQualifier(\"Feature\");\n    } else {\n      (async () => {\n        const responselabels = await fetch(ApiEndpoint + \"viewpartlabels\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(props.item),\n        });\n        const resultlabels = await responselabels.json();\n        setLabel(resultlabels);\n      })();\n    }\n  }, [props.open]);\n\n  function random_color() {\n    const colorCodes = [\n      \"#9DEAED\", // cyan\n      \"#8FDE8C\", // green\n      \"#CFF283\", // light green\n      \"#8CDEBD\", // teal\n      \"#F0A3CE\", // pink\n      \"#F7C672\", // orange\n      \"#F07F7F\", // red\n      \"#FAA887\", // red-orange\n      \"#F099F7\", // magenta\n      \"#C59CFF\", // purple\n      \"#6B81FF\", // blue\n      \"#85A6FF\", // light blue\n    ];\n    return colorCodes[Math.floor(Math.random() * colorCodes.length)];\n  }\n\n  function process(entry) {\n    if (entry)\n      return {\n        name: entry.name,\n        start: entry.start,\n        end: entry.end,\n        direction: entry.direction,\n        color: random_color(),\n      };\n    else return;\n  }\n\n  React.useEffect(() => {\n    (async () => {\n      const response = await fetch(\n        ApiEndpoint +\n          \"returnseqann?qualifier=\" +\n          JSON.stringify(selectedQualifier),\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(props.item),\n        }\n      );\n      try {\n        const result = await response.json();\n        var filtered = result.annotated.filter(Boolean);\n        var processed = filtered.map(process);\n        setAnnotationsSet(processed);\n        setReturnedSeq(result.seq);\n      } catch {\n        console.log(\"error filtering\");\n      }\n    })();\n  }, [selectedQualifier]);\n\n  const SeqVizComponent = () => {\n    if (selectedQualifier === \"Feature\") {\n      return (\n        <SeqViz\n          name=\"J23100\"\n          file={props.item.binaryString}\n          viewer=\"linear\"\n          style={{ height: userHeight, width: userWidth }}\n        />\n      );\n    } else {\n      return (\n        <SeqViz\n          name=\"item\"\n          seq={returnedSeq}\n          annotations={annotationsSet}\n          viewer=\"linear\"\n          style={{ height: userHeight, width: userWidth }}\n        />\n      );\n    }\n  };\n\n  return (\n    <div>\n      <Dialog\n        fullScreen\n        open={props.open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={props.handleClose}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              onClick={props.handleClose}\n              aria-label=\"close\"\n            >\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h5\" className={classes.title}>\n              {props.item.label}\n            </Typography>\n            <Typography variant=\"h6\" className={classes.title}>\n              Current Annotation: {selectedQualifier}\n            </Typography>\n            <div className={classes.search}>\n              <Autocomplete\n                color=\"white\"\n                id=\"item-qualifiers\"\n                options={label}\n                getOptionLabel={(option) => option}\n                value={selectedQualifier}\n                onChange={(event, newValue) => {\n                  setSelectedQualifier(newValue);\n                }}\n                style={{\n                  width: 400,\n                  background: \"white\",\n                  borderRadius: \"5px\",\n                }}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Search Qualifiers to change Annotation...\"\n                    variant=\"filled\"\n                  />\n                )}\n              />\n            </div>\n          </Toolbar>\n        </AppBar>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            The selected part is from the collection:{\" \"}\n            {props.item.collection ? props.item.collection : \"Custom\"}\n          </DialogContentText>\n          <div className={classes.SeqVizDiv}>\n            <SeqVizComponent />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/custominput/custominput.js",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/custominput/custompl.Components/genbank.js",["269"],"import React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport RootRef from \"@material-ui/core/RootRef\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport { usePromiseTracker, trackPromise } from \"react-promise-tracker\";\n\nimport UploadIMG from \"./uploadIMG\";\nimport { Typography } from \"@material-ui/core\";\nimport { ApiEndpoint } from \"../../../../../ApiConnection\";\n\nexport default function Genbank(props) {\n  const { promiseInProgress } = usePromiseTracker();\n\n  async function ValidateFileUpload(dataString, filename, checked, binary) {\n    console.log(dataString);\n    if (checked) {\n      console.log(\"ran\", checked);\n      const response = await fetch(\n        ApiEndpoint + \"fileupload/multiple?type=genbank\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(dataString),\n        }\n      );\n      const result = await response.json();\n      console.log(props.multiple);\n      console.log(result);\n      if (result.partsarray) {\n        for (let i = 0; i < result.partsarray.length; i++) {\n          props.setUploadedFile({\n            seq: result.partsarray[i].seq,\n            label: result.partsarray[i].label,\n            collection: \"\",\n            type: \"genbank\",\n            base64: dataString,\n            multiple: true,\n            index: i,\n            binaryString: binary,\n          });\n        }\n        props.setCatchError(\"\");\n      } else {\n        props.setCatchError(result.error);\n      }\n    } else {\n      const response = await fetch(\n        ApiEndpoint + \"fileupload/singular?type=genbank\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(dataString),\n        }\n      );\n      const result = await response.json();\n      if (result.seq) {\n        props.setUploadedFile({\n          seq: result.seq,\n          label: filename,\n          collection: \"\",\n          type: \"genbank\",\n          base64: dataString,\n          multiple: false,\n          index: null,\n          binaryString: binary,\n        });\n        props.setCatchError(\"\");\n      } else {\n        props.setCatchError(result.error);\n      }\n    }\n  }\n\n  const onDrop = useCallback(\n    (acceptedFiles) => {\n      acceptedFiles.forEach((file) => {\n        const reader = new FileReader();\n\n        reader.onabort = () => console.log(\"file reading was aborted\");\n        reader.onerror = () => console.log(\"file reading has failed\");\n        reader.onload = () => {\n          const binaryStr = reader.result;\n          const uint8 = new Uint8Array(binaryStr);\n          const dataString = JSON.stringify(Array.from(uint8));\n          const b64string = btoa(dataString);\n          console.log(\"data\", dataString);\n          trackPromise(\n            ValidateFileUpload(\n              b64string,\n              file.path,\n              props.multiplePartLinkers,\n              file\n            )\n          );\n        };\n        reader.readAsArrayBuffer(file);\n      });\n    },\n    [props.multiplePartLinkers]\n  );\n\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\n  const { ref, ...rootProps } = getRootProps();\n\n  return (\n    <>\n      <RootRef rootRef={ref}>\n        <Paper {...rootProps} variant=\"outlined\">\n          <input {...getInputProps()} />\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={1}\n            padding={1}\n          >\n            <Grid item>\n              <UploadIMG />\n            </Grid>\n            <Grid item>\n              <Typography>\n                Drag and drop some files here, or click to select files,\n              </Typography>\n            </Grid>\n          </Grid>\n        </Paper>\n      </RootRef>\n      {promiseInProgress ? (\n        <div style={{ padding: \"10px\" }}>\n          <Typography color=\"textSecondary\">Loading...</Typography>\n          <LinearProgress />\n        </div>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\n","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/custominput/custompl.Components/fasta.js",["270"],"import React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport RootRef from \"@material-ui/core/RootRef\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport { usePromiseTracker, trackPromise } from \"react-promise-tracker\";\n\nimport UploadIMG from \"./uploadIMG\";\nimport { Typography } from \"@material-ui/core\";\nimport { ApiEndpoint } from \"../../../../../ApiConnection\";\n\nexport default function Genbank(props) {\n  const { promiseInProgress } = usePromiseTracker();\n\n  async function ValidateFileUpload(dataString, filename, checked) {\n    console.log(dataString);\n    if (checked) {\n      const response = await fetch(\n        ApiEndpoint + \"fileupload/multiple?type=fasta\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(dataString),\n        }\n      );\n      const result = await response.json();\n      if (result.partsarray) {\n        for (let i = 0; i < result.partsarray.length; i++) {\n          props.setUploadedFile({\n            seq: result.partsarray[i].seq,\n            label: result.partsarray[i].label,\n            collection: \"\",\n            type: \"fasta\",\n            base64: dataString,\n            multiple: true,\n            index: i,\n          });\n        }\n        props.setCatchError(\"\");\n      } else {\n        props.setCatchError(result.error);\n      }\n    } else {\n      const response = await fetch(\n        ApiEndpoint + \"fileupload/singular?type=fasta\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(dataString),\n        }\n      );\n      const result = await response.json();\n      if (result.seq) {\n        props.setUploadedFile({\n          seq: result.seq,\n          label: filename,\n          collection: \"\",\n          type: \"fasta\",\n          base64: dataString,\n          multiple: false,\n          index: null,\n        });\n        props.setCatchError(\"\");\n      } else {\n        props.setCatchError(result.error);\n      }\n    }\n  }\n\n  const onDrop = useCallback(\n    (acceptedFiles) => {\n      acceptedFiles.forEach((file) => {\n        const reader = new FileReader();\n\n        reader.onabort = () => console.log(\"file reading was aborted\");\n        reader.onerror = () => console.log(\"file reading has failed\");\n        reader.onload = () => {\n          const binaryStr = reader.result;\n          const dataString = JSON.stringify(\n            Array.from(new Uint8Array(binaryStr))\n          );\n          const b64string = btoa(dataString);\n          trackPromise(\n            ValidateFileUpload(b64string, file.path, props.multiplePartLinkers)\n          );\n        };\n        reader.readAsArrayBuffer(file);\n      });\n    },\n    [props.multiplePartLinkers]\n  );\n\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\n  const { ref, ...rootProps } = getRootProps();\n\n  return (\n    <>\n      <RootRef rootRef={ref}>\n        <Paper {...rootProps} variant=\"outlined\">\n          <input {...getInputProps()} />\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={1}\n            padding={1}\n          >\n            <Grid item>\n              <UploadIMG />\n            </Grid>\n            <Grid item>\n              <Typography>\n                Drag and drop some files here, or click to select files\n              </Typography>\n            </Grid>\n          </Grid>\n        </Paper>\n      </RootRef>\n      {promiseInProgress ? (\n        <div style={{ padding: \"10px\" }}>\n          <Typography color=\"textSecondary\">Loading...</Typography>\n          <LinearProgress />\n        </div>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\n","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/custominput/custompl.Components/shop.js",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/custominput/custompl.Components/SBOL.js",["271"],"import React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport RootRef from \"@material-ui/core/RootRef\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport UploadIMG from \"./uploadIMG\";\nimport { Typography } from \"@material-ui/core\";\nimport { ApiEndpoint } from \"../../../../../ApiConnection\";\n\nexport default function SBOL(props) {\n  async function ValidateFileUpload(dataString, filename) {\n    const response = await fetch(\n      ApiEndpoint +\n        \"fileupload/singular?file=\" +\n        JSON.stringify(dataString) +\n        \"&type=SBOL\"\n    );\n    const result = await response.json();\n    if (result.seq) {\n      props.setUploadedFile({\n        seq: result.seq,\n        label: filename,\n        collection: \"\",\n        type: \"SBOL\",\n        base64: dataString,\n      });\n      props.setCatchError(\"\");\n    } else {\n      props.setCatchError(result.error);\n    }\n  }\n\n  const onDrop = useCallback((acceptedFiles) => {\n    acceptedFiles.forEach((file) => {\n      const reader = new FileReader();\n\n      reader.onabort = () => console.log(\"file reading was aborted\");\n      reader.onerror = () => console.log(\"file reading has failed\");\n      reader.onload = () => {\n        const binaryStr = reader.result;\n        const dataString = JSON.stringify(\n          Array.from(new Uint8Array(binaryStr))\n        );\n        const b64string = btoa(dataString);\n        ValidateFileUpload(b64string, file.path);\n      };\n      reader.readAsArrayBuffer(file);\n    });\n  }, []);\n\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\n  const { ref, ...rootProps } = getRootProps();\n\n  return (\n    <RootRef rootRef={ref}>\n      <Paper {...rootProps} variant=\"outlined\">\n        <input {...getInputProps()} />\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={1}\n          padding={1}\n        >\n          <Grid item>\n            <UploadIMG />\n          </Grid>\n          <Grid item>\n            <Typography>\n              Drag and drop some files here, or click to select files\n            </Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n    </RootRef>\n  );\n}\n","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/custominput/custompl.Components/MultipleCheck.js",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/custominput/custompl.Components/uploadIMG.tsx",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/standardinput/standardpl.Components/seachCollection.tsx",["272","273"],"import React, { useState } from \"react\";\nimport {\n  Checkbox,\n  TextField,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  InputLabel,\n  Input,\n  FormControl,\n  Select,\n  Typography,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport fetch from \"cross-fetch\";\nimport { ApiEndpoint } from \"../../../../../ApiConnection\";\nimport { Collection } from \"../../../../../interfaces/Collection\";\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n    marginTop: theme.spacing(2),\n    textAlign: \"center\",\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  formControl: {\n    marginTop: theme.spacing(1),\n    width: \"100%\",\n  },\n  selectcolumn: {\n    width: \"100%\",\n    paddingTop: \"10px\",\n  },\n}));\n\ninterface Props {\n  clickedCollections: Collection[];\n  setClickedCollections: React.Dispatch<React.SetStateAction<Collection[]>>;\n  collections: Collection[];\n  setCollections: React.Dispatch<React.SetStateAction<Collection[]>>;\n}\n\nexport const SearchCollection: React.FC<Props> = ({\n  clickedCollections,\n  setClickedCollections,\n  collections,\n  setCollections,\n}) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState<boolean>(false);\n  const loading = open && collections.length === 0;\n\n  //Popup Components\n  const [versionOpen, setVersionOpen] = useState<boolean>(false);\n  const [age, setAge] = React.useState<string>(\"\");\n  const handleChange = (\n    event: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => {\n    setAge(String(event.target.value) || \"\");\n  };\n\n  const handleVersionClose = () => {\n    setVersionOpen(false);\n  };\n\n  React.useEffect(() => {\n    let active = true;\n    if (!loading) {\n      return undefined;\n    }\n    (async () => {\n      const response = await fetch(ApiEndpoint + \"collections/names\");\n      const myresponse = await response.json();\n      if (active) {\n        setCollections(myresponse.data.map((item: string) => ({ name: item })));\n      }\n    })();\n    return () => {\n      active = false;\n    };\n  }, [loading]);\n\n  React.useEffect(() => {\n    if (!open) {\n      setCollections([]);\n    }\n  }, [open]);\n\n  function HandleClickOnChip(event: any) {\n    setClickedCollections(\n      event.target.outerText.substring(0, event.target.outerText.length - 7)\n    );\n    setVersionOpen(true);\n  }\n\n  return (\n    <div>\n      <div className={classes.root}>\n        <Autocomplete\n          onChange={(event: any, value: string[]) => {\n            setClickedCollections(value.map((item) => ({ name: item })));\n            console.log(value);\n          }}\n          ChipProps={{ clickable: true, onClick: HandleClickOnChip }}\n          multiple\n          open={open}\n          onOpen={() => {\n            setOpen(true);\n          }}\n          onClose={() => {\n            setOpen(false);\n          }}\n          fullWidth\n          getOptionLabel={(option) => option + String(\" | v0.1\")}\n          options={collections.map((item) => item.name)}\n          loading={loading}\n          disableCloseOnSelect\n          renderOption={(option, { selected }) => (\n            <React.Fragment>\n              {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n              <Checkbox\n                icon={icon}\n                checkedIcon={checkedIcon}\n                style={{ marginRight: 8 }}\n                checked={selected}\n              />\n              {option}\n            </React.Fragment>\n          )}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              variant=\"outlined\"\n              label=\"Add Collections in which you want to search from\"\n              placeholder=\"Search Collections\"\n            />\n          )}\n        />\n      </div>\n      <Dialog\n        disableBackdropClick\n        disableEscapeKeyDown\n        open={versionOpen}\n        onClose={handleVersionClose}\n      >\n        <DialogTitle>Select Desired Version</DialogTitle>\n        <Divider variant=\"middle\" />\n        <DialogContent>\n          <Typography color=\"textSecondary\">{clickedCollections}</Typography>\n          <form className={classes.container}>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"demo-dialog-native\">Version</InputLabel>\n              <Select\n                autoWidth\n                native\n                value={age}\n                onChange={handleChange}\n                input={<Input id=\"demo-dialog-native\" />}\n              >\n                <option aria-label=\"None\" value=\"\" />\n                <option value={10}>v0.1</option>\n              </Select>\n            </FormControl>\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleVersionClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleVersionClose} color=\"primary\">\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/standardinput/standardpl.Components/searchPart.tsx",["274"],"import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport fetch from \"cross-fetch\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { ApiEndpoint } from \"../../../../../ApiConnection\";\nimport { Collection } from \"../../../../../interfaces/Collection\";\nimport { CollectionData } from \"../../../../../interfaces/CollectionData\";\nimport { Part } from \"../../../../../interfaces/Part\";\n\ninterface Props {\n  value: Part | undefined;\n  onChangeValue: React.Dispatch<React.SetStateAction<Part | undefined>>;\n  clickedCollections: Collection[];\n  partOptions: Part[];\n  setPartOptions: React.Dispatch<React.SetStateAction<Part[]>>;\n}\n\nexport const SearchPart: React.FC<Props> = ({\n  value,\n  onChangeValue,\n  clickedCollections,\n  partOptions,\n  setPartOptions,\n}) => {\n  const [inputValue, setInputValue] = React.useState<string>();\n  const [open, setOpen] = React.useState<boolean>(false);\n  const loading = open && partOptions.length === 0;\n\n  React.useEffect(() => {\n    let active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n    (async () => {\n      if (clickedCollections.length === 0) {\n        setOpen(false);\n      }\n      const response = await fetch(ApiEndpoint + \"collections/data\");\n      console.log(response);\n      const myresponse = await response.json();\n      console.log(myresponse);\n      const collectionsData: CollectionData[] = myresponse.data;\n      console.log(collectionsData);\n      var mergedArray = [];\n\n      const clickedCollectionsArray = clickedCollections.map(\n        (item) => item.name\n      );\n\n      console.log(clickedCollectionsArray);\n\n      for (let selectedCollection of collectionsData) {\n        if (clickedCollectionsArray.includes(selectedCollection.name)) {\n          for (let part of selectedCollection.parts) {\n            console.log(part);\n            mergedArray.push(part);\n          }\n        }\n      }\n      if (active) {\n        console.log(mergedArray);\n        setPartOptions(mergedArray);\n      }\n      return () => {\n        active = false;\n      };\n    })();\n  }, [loading, clickedCollections]);\n\n  React.useEffect(() => {\n    if (!open) {\n      setPartOptions([]);\n    }\n  }, [open, setPartOptions]);\n\n  return (\n    <Autocomplete\n      id=\"asynchronous-demo\"\n      style={{ width: \"100%\" }}\n      value={value}\n      onChange={(event: any, newValue: Part | null) => {\n        if (newValue !== null) {\n          onChangeValue(newValue);\n        }\n      }}\n      inputValue={inputValue}\n      onInputChange={(event, newInputValue) => {\n        setInputValue(newInputValue);\n      }}\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      getOptionSelected={(option, value) => value.label === option.label}\n      getOptionLabel={(option) => option.label}\n      options={partOptions}\n      loading={loading}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"Select Part\"\n          variant=\"outlined\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? (\n                  <CircularProgress color=\"inherit\" size={20} />\n                ) : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n};\n","/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/userinput.tsx",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/standardinput/standardpl.Components/standardShop.tsx",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/standardinput/standardpl.Components/standardCopyable.tsx",[],"/Users/benedictcarling/Documents/programming/LBF/basicsynbio_frontend/src/components/designer/userinput/standardinput/standardinput.tsx",[],{"ruleId":"275","replacedBy":"276"},{"ruleId":"277","replacedBy":"278"},{"ruleId":"279","severity":1,"message":"280","line":14,"column":8,"nodeType":"281","messageId":"282","endLine":14,"endColumn":18},{"ruleId":"275","replacedBy":"283"},{"ruleId":"277","replacedBy":"284"},{"ruleId":"275","replacedBy":"283"},{"ruleId":"277","replacedBy":"284"},{"ruleId":"279","severity":1,"message":"280","line":14,"column":8,"nodeType":"281","messageId":"282","endLine":14,"endColumn":18},{"ruleId":"279","severity":1,"message":"285","line":41,"column":10,"nodeType":"281","messageId":"282","endLine":41,"endColumn":26},{"ruleId":"279","severity":1,"message":"286","line":41,"column":28,"nodeType":"281","messageId":"282","endLine":41,"endColumn":47},{"ruleId":"279","severity":1,"message":"287","line":42,"column":10,"nodeType":"281","messageId":"282","endLine":42,"endColumn":29},{"ruleId":"279","severity":1,"message":"288","line":42,"column":31,"nodeType":"281","messageId":"282","endLine":42,"endColumn":53},{"ruleId":"289","severity":1,"message":"290","line":67,"column":6,"nodeType":"291","endLine":67,"endColumn":18,"suggestions":"292"},{"ruleId":"289","severity":1,"message":"293","line":125,"column":6,"nodeType":"291","endLine":125,"endColumn":40,"suggestions":"294"},{"ruleId":"279","severity":1,"message":"295","line":47,"column":7,"nodeType":"281","messageId":"282","endLine":47,"endColumn":13},{"ruleId":"289","severity":1,"message":"296","line":49,"column":6,"nodeType":"291","endLine":49,"endColumn":18,"suggestions":"297"},{"ruleId":"279","severity":1,"message":"298","line":14,"column":8,"nodeType":"281","messageId":"282","endLine":14,"endColumn":18},{"ruleId":"289","severity":1,"message":"299","line":69,"column":6,"nodeType":"291","endLine":69,"endColumn":18,"suggestions":"300"},{"ruleId":"289","severity":1,"message":"301","line":125,"column":6,"nodeType":"291","endLine":125,"endColumn":25,"suggestions":"302"},{"ruleId":"289","severity":1,"message":"303","line":105,"column":5,"nodeType":"291","endLine":105,"endColumn":32,"suggestions":"304"},{"ruleId":"289","severity":1,"message":"303","line":95,"column":5,"nodeType":"291","endLine":95,"endColumn":32,"suggestions":"305"},{"ruleId":"289","severity":1,"message":"303","line":49,"column":6,"nodeType":"291","endLine":49,"endColumn":8,"suggestions":"306"},{"ruleId":"289","severity":1,"message":"307","line":100,"column":6,"nodeType":"291","endLine":100,"endColumn":15,"suggestions":"308"},{"ruleId":"289","severity":1,"message":"307","line":106,"column":6,"nodeType":"291","endLine":106,"endColumn":12,"suggestions":"309"},{"ruleId":"289","severity":1,"message":"310","line":70,"column":6,"nodeType":"291","endLine":70,"endColumn":35,"suggestions":"311"},"no-native-reassign",["312"],"no-negated-in-lhs",["313"],"no-unused-vars","'VpnKeyIcon' is defined but never used.","Identifier","unusedVar",["312"],["313"],"'assemblySequence' is assigned a value but never used.","'setAssemblySequence' is assigned a value but never used.","'assemblySequenceErr' is assigned a value but never used.","'setAssemblySequenceErr' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'props.shoppingBagItems'. Either include it or remove the dependency array.","ArrayExpression",["314"],"React Hook React.useEffect has missing dependencies: 'process' and 'props.shoppingBagItems'. Either include them or remove the dependency array.",["315"],"'active' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.",["316"],"'SearchIcon' is defined but never used.","React Hook React.useEffect has a missing dependency: 'props.item'. Either include it or remove the dependency array.",["317"],"React Hook React.useEffect has missing dependencies: 'process' and 'props.item'. Either include them or remove the dependency array.",["318"],"React Hook useCallback has a missing dependency: 'ValidateFileUpload'. Either include it or remove the dependency array.",["319"],["320"],["321"],"React Hook React.useEffect has a missing dependency: 'setCollections'. Either include it or remove the dependency array. If 'setCollections' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["322"],["323"],"React Hook React.useEffect has a missing dependency: 'setPartOptions'. Either include it or remove the dependency array. If 'setPartOptions' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["324"],"no-global-assign","no-unsafe-negation",{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"335","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},"Update the dependencies array to be: [props.open, props.shoppingBagItems]",{"range":"346","text":"347"},"Update the dependencies array to be: [selectedSeqQualifier, props.open, props.shoppingBagItems, process]",{"range":"348","text":"349"},"Update the dependencies array to be: [props, props.open]",{"range":"350","text":"351"},"Update the dependencies array to be: [props.item, props.open]",{"range":"352","text":"353"},"Update the dependencies array to be: [process, props.item, selectedQualifier]",{"range":"354","text":"355"},"Update the dependencies array to be: [ValidateFileUpload, props.multiplePartLinkers]",{"range":"356","text":"357"},{"range":"358","text":"357"},"Update the dependencies array to be: [ValidateFileUpload]",{"range":"359","text":"360"},"Update the dependencies array to be: [loading, setCollections]",{"range":"361","text":"362"},"Update the dependencies array to be: [open, setCollections]",{"range":"363","text":"364"},"Update the dependencies array to be: [loading, clickedCollections, setPartOptions]",{"range":"365","text":"366"},[2363,2375],"[props.open, props.shoppingBagItems]",[3829,3863],"[selectedSeqQualifier, props.open, props.shoppingBagItems, process]",[1611,1623],"[props, props.open]",[2330,2342],"[props.item, props.open]",[3723,3742],"[process, props.item, selectedQualifier]",[3211,3238],"[ValidateFileUpload, props.multiplePartLinkers]",[2906,2933],[1546,1548],"[ValidateFileUpload]",[2502,2511],"[loading, setCollections]",[2595,2601],"[open, setCollections]",[2148,2177],"[loading, clickedCollections, setPartOptions]"]