{
  "openapi": "3.0.2",
  "info": {
    "title": "BasicSynBio API",
    "description": "\nA REST API for BasicSynBio that allows the BasicSynBio python package to be consumed by any language - the primary use case for this is own own BasicSynBio frontend application. ðŸš€\n\n[Python Package](https://pypi.org/project/basicsynbio/) --- \n[Interactive Web App](https://basicsynbio.web.app)\n\nBelow is a list of endpoints that can be accessed via the API, each endpoint can be simulated within their corresponding boxes.\n",
    "version": "0.0.1"
  },
  "paths": {
    "/": {
      "get": {
        "summary": "Root Endpoint For Health Check",
        "description": "## API Root\n\nRoot endpoint for health check, returns basic message.",
        "operationId": "root_endpoint_for_health_check__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/collections/names": {
      "get": {
        "summary": "Get Collection Names",
        "description": "## Collection Names\n\nReturns a list of the available basicynbio part collections to the user.\n\nMore infomation about part linker collections can be found at the [basicsynbio documentation](https://londonbiofoundry.github.io/basicsynbio/collections.html)",
        "operationId": "get_collection_names_collections_names_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseCollectionsName"
                }
              }
            }
          }
        }
      }
    },
    "/collections/data": {
      "get": {
        "summary": "Get Collection Data",
        "description": "## Collection Data\n\nReturns a list of the available basicynbio part collections and the data within them to the user.\n\nMore infomation about part linker collections can be found at the [basicsynbio documentation](https://londonbiofoundry.github.io/basicsynbio/collections.html)",
        "operationId": "get_collection_data_collections_data_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseCollectionsData"
                }
              }
            }
          }
        }
      }
    },
    "/fileupload/singular": {
      "post": {
        "summary": "Singular File Upload",
        "description": "## Singular File Upload\n\nUploads a file containing only one sequence record to the server to return a JSON version of the same object for further processing in the basicsynbio interactive web app.",
        "operationId": "singular_file_upload_fileupload_singular_post",
        "parameters": [
          {
            "required": true,
            "schema": { "$ref": "#/components/schemas/fileType" },
            "name": "type",
            "in": "query"
          },
          {
            "required": true,
            "schema": { "title": "Addiseq", "type": "boolean" },
            "name": "addiseq",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_singular_file_upload_fileupload_singular_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseSingularFileUpload"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/fileupload/multiple": {
      "post": {
        "summary": "Multiple File Upload",
        "description": "## Multiple File Upload\n\nUploads a file containing more than one sequence record to the server to return a JSON version of the same object for further processing in the basicsynbio interactive web app.",
        "operationId": "multiple_file_upload_fileupload_multiple_post",
        "parameters": [
          {
            "required": true,
            "schema": { "$ref": "#/components/schemas/fileType" },
            "name": "type",
            "in": "query"
          },
          {
            "required": true,
            "schema": { "title": "Addiseq", "type": "boolean" },
            "name": "addiseq",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_multiple_file_upload_fileupload_multiple_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseMultipleFileUpload"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/validate": {
      "post": {
        "summary": "Validate Assembly",
        "description": "## Validate\n\nThis endpoint ensures that a input list of basicParts can successfully build a basic assembly.",
        "operationId": "validate_assembly_validate_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_validate_assembly_validate_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/responseValidate" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/buildcsvs": {
      "post": {
        "summary": "Build Csvs",
        "description": "## Build CSVs\n\nThis endpoint takes a list of basicAssembly objects and returns a CSV representation of the same objects.",
        "operationId": "build_csvs_buildcsvs_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_build_csvs_buildcsvs_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/buildechoinstructions": {
      "post": {
        "summary": "Build Echo Instructions",
        "description": "## Build Echo Instructions\n\nThis endpoint takes a list of basicAssembly objects and returns the Echo robot instructions to perform the clip step of BASIC DNA assembly.",
        "operationId": "build_echo_instructions_buildechoinstructions_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_build_echo_instructions_buildechoinstructions_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/build_pdf_instructions": {
      "post": {
        "summary": "Build Pdf Instructions",
        "description": "## Build PDF Instructions\n\nThis endpoint takes a list of basicAssembly objects and returns a PDF for the manual assembly within a lab of the basicAssembly object.",
        "operationId": "build_pdf_instructions_build_pdf_instructions_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_build_pdf_instructions_build_pdf_instructions_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/buildjson": {
      "post": {
        "summary": "Build Json",
        "description": "## Build JSON\n\nThis endpoint takes a list of basicAssembly objects and returns a JSON serialised version of the same objects.",
        "operationId": "build_json_buildjson_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_build_json_buildjson_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/builduniqueparts": {
      "post": {
        "summary": "Build Unique Parts As Genbank",
        "description": "## Build Unique Parts\n\nThis endpoint takes a list of basicAssembly objects and returns unique parts within each BasicAssembly as a genbank file.",
        "operationId": "build_unique_parts_as_genbank_builduniqueparts_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_build_unique_parts_as_genbank_builduniqueparts_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/builduniqueassemblies": {
      "post": {
        "summary": "Buils Unique Assemblies As Genbank",
        "description": "## Build Unique Assemblies\n\nThis endpoint takes a list of basicAssembly objects and returns unique assemblies within the basicAssembly as a genbank file.",
        "operationId": "buils_unique_assemblies_as_genbank_builduniqueassemblies_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_buils_unique_assemblies_as_genbank_builduniqueassemblies_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/viewseqlabels": {
      "post": {
        "summary": "View Sequence Labels",
        "operationId": "view_sequence_labels_viewseqlabels_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_view_sequence_labels_viewseqlabels_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseViewSeqLabels"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/viewpartlabels": {
      "post": {
        "summary": "View Part Labels",
        "operationId": "view_part_labels_viewpartlabels_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_view_part_labels_viewpartlabels_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/returnseqann": {
      "post": {
        "summary": "View Sequence Annotations",
        "operationId": "view_sequence_annotations_returnseqann_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_view_sequence_annotations_returnseqann_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/dnafeatureviewer": {
      "post": {
        "summary": "Dnafeatureviewer",
        "operationId": "dnafeatureviewer_dnafeatureviewer_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_dnafeatureviewer_dnafeatureviewer_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/dnafeatureviewer_assembly": {
      "post": {
        "summary": "Dnafeaturesviewer For Assemblies",
        "operationId": "dnafeaturesviewer_for_assemblies_dnafeatureviewer_assembly_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_dnafeaturesviewer_for_assemblies_dnafeatureviewer_assembly_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Body_build_csvs_buildcsvs_post": {
        "title": "Body_build_csvs_buildcsvs_post",
        "required": ["myAssemblyArrayStr"],
        "type": "object",
        "properties": {
          "myAssemblyArrayStr": {
            "title": "Myassemblyarraystr",
            "type": "string"
          },
          "files": {
            "title": "Files",
            "type": "array",
            "items": { "type": "string", "format": "binary" },
            "default": []
          }
        }
      },
      "Body_build_echo_instructions_buildechoinstructions_post": {
        "title": "Body_build_echo_instructions_buildechoinstructions_post",
        "required": ["myAssemblyArrayStr"],
        "type": "object",
        "properties": {
          "myAssemblyArrayStr": {
            "title": "Myassemblyarraystr",
            "type": "string"
          },
          "files": {
            "title": "Files",
            "type": "array",
            "items": { "type": "string", "format": "binary" },
            "default": []
          }
        }
      },
      "Body_build_json_buildjson_post": {
        "title": "Body_build_json_buildjson_post",
        "required": ["myAssemblyArrayStr"],
        "type": "object",
        "properties": {
          "myAssemblyArrayStr": {
            "title": "Myassemblyarraystr",
            "type": "string"
          },
          "files": {
            "title": "Files",
            "type": "array",
            "items": { "type": "string", "format": "binary" },
            "default": []
          }
        }
      },
      "Body_build_pdf_instructions_build_pdf_instructions_post": {
        "title": "Body_build_pdf_instructions_build_pdf_instructions_post",
        "required": ["myAssemblyArrayStr"],
        "type": "object",
        "properties": {
          "myAssemblyArrayStr": {
            "title": "Myassemblyarraystr",
            "type": "string"
          },
          "files": {
            "title": "Files",
            "type": "array",
            "items": { "type": "string", "format": "binary" },
            "default": []
          }
        }
      },
      "Body_build_unique_parts_as_genbank_builduniqueparts_post": {
        "title": "Body_build_unique_parts_as_genbank_builduniqueparts_post",
        "required": ["myAssemblyArrayStr"],
        "type": "object",
        "properties": {
          "myAssemblyArrayStr": {
            "title": "Myassemblyarraystr",
            "type": "string"
          },
          "files": {
            "title": "Files",
            "type": "array",
            "items": { "type": "string", "format": "binary" },
            "default": []
          }
        }
      },
      "Body_buils_unique_assemblies_as_genbank_builduniqueassemblies_post": {
        "title": "Body_buils_unique_assemblies_as_genbank_builduniqueassemblies_post",
        "required": ["myAssemblyArrayStr"],
        "type": "object",
        "properties": {
          "myAssemblyArrayStr": {
            "title": "Myassemblyarraystr",
            "type": "string"
          },
          "files": {
            "title": "Files",
            "type": "array",
            "items": { "type": "string", "format": "binary" },
            "default": []
          }
        }
      },
      "Body_dnafeaturesviewer_for_assemblies_dnafeatureviewer_assembly_post": {
        "title": "Body_dnafeaturesviewer_for_assemblies_dnafeatureviewer_assembly_post",
        "required": ["myPartArrayStr"],
        "type": "object",
        "properties": {
          "myPartArrayStr": { "title": "Mypartarraystr", "type": "string" },
          "files": {
            "title": "Files",
            "type": "array",
            "items": { "type": "string", "format": "binary" },
            "default": []
          }
        }
      },
      "Body_dnafeatureviewer_dnafeatureviewer_post": {
        "title": "Body_dnafeatureviewer_dnafeatureviewer_post",
        "required": ["myPart"],
        "type": "object",
        "properties": {
          "myPart": { "title": "Mypart", "type": "string" },
          "files": {
            "title": "Files",
            "type": "array",
            "items": { "type": "string", "format": "binary" },
            "default": []
          }
        }
      },
      "Body_multiple_file_upload_fileupload_multiple_post": {
        "title": "Body_multiple_file_upload_fileupload_multiple_post",
        "required": ["file"],
        "type": "object",
        "properties": {
          "file": { "title": "File", "type": "string", "format": "binary" }
        }
      },
      "Body_singular_file_upload_fileupload_singular_post": {
        "title": "Body_singular_file_upload_fileupload_singular_post",
        "required": ["file"],
        "type": "object",
        "properties": {
          "file": { "title": "File", "type": "string", "format": "binary" }
        }
      },
      "Body_validate_assembly_validate_post": {
        "title": "Body_validate_assembly_validate_post",
        "required": ["myPartArrayStr"],
        "type": "object",
        "properties": {
          "myPartArrayStr": { "title": "Mypartarraystr", "type": "string" },
          "files": {
            "title": "Files",
            "type": "array",
            "items": { "type": "string", "format": "binary" },
            "default": []
          }
        }
      },
      "Body_view_part_labels_viewpartlabels_post": {
        "title": "Body_view_part_labels_viewpartlabels_post",
        "required": ["myPart"],
        "type": "object",
        "properties": {
          "myPart": { "title": "Mypart", "type": "string" },
          "files": {
            "title": "Files",
            "type": "array",
            "items": { "type": "string", "format": "binary" },
            "default": []
          }
        }
      },
      "Body_view_sequence_annotations_returnseqann_post": {
        "title": "Body_view_sequence_annotations_returnseqann_post",
        "required": ["Qualifier", "myPart"],
        "type": "object",
        "properties": {
          "Qualifier": { "title": "Qualifier", "type": "string" },
          "myPart": { "title": "Mypart", "type": "string" },
          "files": {
            "title": "Files",
            "type": "array",
            "items": { "type": "string", "format": "binary" },
            "default": []
          }
        }
      },
      "Body_view_sequence_labels_viewseqlabels_post": {
        "title": "Body_view_sequence_labels_viewseqlabels_post",
        "required": ["myPartArrayStr"],
        "type": "object",
        "properties": {
          "myPartArrayStr": { "title": "Mypartarraystr", "type": "string" },
          "files": {
            "title": "Files",
            "type": "array",
            "items": { "type": "string", "format": "binary" },
            "default": []
          }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ValidationError" }
          }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": ["loc", "msg", "type"],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": { "type": "string" }
          },
          "msg": { "title": "Message", "type": "string" },
          "type": { "title": "Error Type", "type": "string" }
        }
      },
      "basicAssembly": {
        "title": "basicAssembly",
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": { "title": "Id", "type": "string" },
          "name": { "title": "Name", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "parts": {
            "title": "Parts",
            "type": "array",
            "items": { "$ref": "#/components/schemas/basicPart" }
          }
        },
        "example": {
          "id": "2f4b235d-1736-4b9b-85b8-6af8befeb39f",
          "parts": [
            {
              "id": "SEVA_12",
              "label": "BASIC_SEVA_12",
              "type": "collection",
              "accessor": "12",
              "collection": "BASIC_SEVA_PARTS",
              "version": "v0.1"
            },
            {
              "id": "LMS",
              "label": "LMS",
              "type": "collection",
              "accessor": "LMS",
              "collection": "BASIC_BIOLEGIO_LINKERS",
              "version": "v0.1"
            },
            {
              "id": "SEVA_13",
              "label": "BASIC_SEVA_13",
              "type": "collection",
              "accessor": "13",
              "collection": "BASIC_SEVA_PARTS",
              "version": "v0.1"
            },
            {
              "id": "LMP",
              "label": "LMP",
              "type": "collection",
              "accessor": "LMP",
              "collection": "BASIC_BIOLEGIO_LINKERS",
              "version": "v0.1"
            }
          ],
          "name": "",
          "description": ""
        }
      },
      "basicPart": {
        "title": "basicPart",
        "required": ["id", "type"],
        "type": "object",
        "properties": {
          "id": { "title": "Id", "type": "string" },
          "label": { "title": "Label", "type": "string" },
          "type": { "$ref": "#/components/schemas/basicPartType" },
          "description": { "title": "Description", "type": "string" },
          "seq": { "title": "Seq", "type": "string" },
          "accessor": { "title": "Accessor", "type": "string" },
          "collection": { "title": "Collection", "type": "string" },
          "version": { "title": "Version", "type": "string" },
          "fileId": { "title": "Fileid", "type": "string" },
          "addiseq": { "title": "Addiseq", "type": "boolean" },
          "index": { "title": "Index", "type": "integer" },
          "file": { "title": "File" },
          "combinatorial": { "title": "Combinatorial", "type": "boolean" },
          "combinatorialParts": { "title": "Combinatorialparts" }
        },
        "example": {
          "id": "SEVA_12",
          "label": "BASIC_SEVA_12",
          "type": "collection",
          "accessor": "12",
          "collection": "BASIC_SEVA_PARTS",
          "version": "v0.1"
        }
      },
      "basicPartType": {
        "title": "basicPartType",
        "enum": ["uploadSingle", "uploadMultiple", "collection"],
        "type": "string",
        "description": "An enumeration."
      },
      "collection": {
        "title": "collection",
        "required": ["name", "availableVersions", "versions"],
        "type": "object",
        "properties": {
          "name": { "title": "Name", "type": "string" },
          "availableVersions": {
            "title": "Availableversions",
            "type": "array",
            "items": { "type": "string" }
          },
          "versions": {
            "title": "Versions",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/collectionVersionInstance"
            }
          }
        }
      },
      "collectionVersionInstance": {
        "title": "collectionVersionInstance",
        "required": ["name", "parts"],
        "type": "object",
        "properties": {
          "name": { "title": "Name", "type": "string" },
          "parts": {
            "title": "Parts",
            "type": "array",
            "items": { "$ref": "#/components/schemas/basicPart" }
          }
        }
      },
      "fileType": {
        "title": "fileType",
        "enum": ["genbank", "fasta", "SBOL"],
        "type": "string",
        "description": "An enumeration."
      },
      "responseCollectionsData": {
        "title": "responseCollectionsData",
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "title": "Data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/collection" }
          }
        }
      },
      "responseCollectionsName": {
        "title": "responseCollectionsName",
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "title": "Data",
            "type": "array",
            "items": { "type": "string" }
          }
        }
      },
      "responseMultipleFileUpload": {
        "title": "responseMultipleFileUpload",
        "required": ["result"],
        "type": "object",
        "properties": {
          "result": { "title": "Result", "type": "boolean" },
          "message": { "title": "Message", "type": "string" },
          "parts": {
            "title": "Parts",
            "type": "array",
            "items": { "$ref": "#/components/schemas/basicPart" }
          }
        }
      },
      "responseSingularFileUpload": {
        "title": "responseSingularFileUpload",
        "required": ["result"],
        "type": "object",
        "properties": {
          "result": { "title": "Result", "type": "boolean" },
          "message": { "title": "Message", "type": "string" },
          "part": { "$ref": "#/components/schemas/basicPart" }
        }
      },
      "responseValidate": {
        "title": "responseValidate",
        "required": ["result"],
        "type": "object",
        "properties": {
          "result": { "title": "Result", "type": "boolean" },
          "message": { "title": "Message", "type": "string" },
          "assembly": { "$ref": "#/components/schemas/basicAssembly" }
        }
      },
      "responseViewSeqLabels": {
        "title": "responseViewSeqLabels",
        "required": ["result"],
        "type": "object",
        "properties": {
          "result": { "title": "Result", "type": "boolean" },
          "message": { "title": "Message" }
        }
      }
    }
  }
}
